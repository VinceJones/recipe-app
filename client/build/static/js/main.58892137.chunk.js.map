{"version":3,"sources":["models/Message.js","components/MessageService.js","components/Message/Message.js","components/Page/Page.js","models/Ingredient.js","models/Tag.js","models/Recipe.js","components/RecipeConfig.js","components/Button/Button.js","components/Form/IngredientForm.js","components/Form/IngredientFormContainer.js","components/Form/TagForm.js","components/Form/TagFormContainer.js","components/Form/RecipeForm.js","models/User.js","components/StorageHandler.js","components/Page/FormPage/FormPage.js","components/Modal/Modal.js","components/Modal/DeleteRecipeModal.js","components/Accordion/AccordionSection.js","components/Accordion/Accordion.js","components/Page/ListPage/ListIngredient.js","components/Form/RecipeScalingForm.js","components/AuthHandler.js","components/UserService.js","components/Accordion/ListPageAccordion.js","components/Form/ListPageFilterForm.js","components/FilterHandler.js","components/Page/ListPage/ListPage.js","components/Page/Login/LoginPageContent.js","components/Page/Login/LoginPage.js","components/Menu/MenuItem.js","Routes.js","components/Menu/MainMenu.js","App.js","serviceWorker.js","index.js"],"names":["Message","_ref","_ref$status","status","_ref$text","text","_ref$shown","shown","Object","classCallCheck","this","WARNING","ERROR","SUCCESS","components_MessageService","appComponent","clearMessages","_callee","nextState","regenerator_default","a","wrap","_context","prev","next","_this","state","messageUtility","message","assign","setState","stop","setMessage","_callee2","_context2","console","log","toggleMessageShown","_callee3","_context3","undefined","statuses","getPostMessageStatus","saved","getSavedRecipeMessage","getRecipeNotFoundStatus","getRecipeNotFoundMessage","getRecipeUpdateStatus","getRecipeUpdateMessage","arguments","length","getRecipeDeleteStatus","getRecipeDeleteMessage","getRecipeDeleteFailStatus","getRecipeDeleteFailMessage","_this2","getMessage","props","getContainerClass","containerClass","concat","react_default","createElement","messageServiceSingleton","className","Component","Page","componentDidMount","componentWillUnmount","Message_Message_Message","pageTitle","children","Ingredient","ing","name","amount","measurementType","Tag","tag","id","Recipe","recipe","tranformIngredientData","ingData","ingredients","forEach","push","transformTagData","tagData","tags","description","RecipeConfig","value","rows","columns","Button","onClick","e","preventDefault","attributes","classes","attr","isBtn","link","objectSpread","recipeConfig","IngredientForm","handleFieldChange","event","inputElement","target","ingredient","onChange","type","measurementTypes","map","measurement","index","key","showDeleteButton","Button_Button","requestDeleteGroup","IngredientFormContainer","newIngValues","toConsumableArray","IngredientForm_IngredientForm","shouldShowDeleteButton","requestAddGroup","TagForm","requestDeleteTag","TagFormContainer","newTagValues","TagForm_TagForm","requestAddTag","RecipeForm","handleSubmit","onSubmit","handleRecipeFieldChange","textAreaConfig","cols","TagFormContainer_TagFormContainer","handleChildFieldChange","handleDeleteItemFromArray","handleAddTag","IngredientFormContainer_IngredientFormContainer","handleDeleteIngredientGroup","handleAddIngredientGroup","User","user","accessToken","clientId","githubId","StorageHandler","getUser","asyncToGenerator","mark","storageKey","userData","localStorage","getItem","sent","JSON","parse","abrupt","_x","apply","setUser","_ref2","setItem","stringify","_x2","_x3","removeUser","_ref3","_x4","postRecipe","_ref4","_callee4","data","json","headers","options","_context4","postHeaders","method","body","makeRequest","endpoints","postRecipes","then","responseJson","catch","error","_x5","putRecipe","_ref5","_callee5","_context5","updateRecipe","_x6","getRecipes","_callee6","_context6","responseData","recipes","recipeData","getRecipeById","_ref7","_callee7","endpoint","_context7","isEmpty","parsedData","_x7","obj","hasOwnProperty","deleteRecipeById","_ref8","_callee8","_context8","deleteRecipe","_x8","_ref9","_callee9","_args9","_context9","fetch","host","response","result","_x9","window","location","protocol","Headers","append","storageHandler","FormPage","possibleConstructorReturn","getPrototypeOf","call","getRecipeFromPath","setPageTitle","recipeId","match","params","parseInt","history","recipeFieldElement","field","newValuesCollection","filter","ingIdx","propName","item","itemIdx","res","bind","assertThisInitialized","Page_Page_Page","RecipeForm_RecipeForm","fieldName","Modal","getShowHideClassName","show","hideModal","DeleteRecipeModal","Modal_Modal","showModal","recipeName","handleDeleteRecipe","AccordionSection","label","isOpen","getArrowIcon","Accordion","_assertThisInitialize","allowMultipleOpen","openSections","defineProperty","child","Accordion_AccordionSection","defaultProps","ListIngredient","_ref$scaled","scaled","ingredientAmount","String","scaleIngredient","RecipeScalingForm","fieldElement","scaleRecipe","scalingType","scalingAmount","scalingTypes","AuthHandler","getClientId","getAccessToken","code","isUserAdmin","_args4","redirectUri","authHandler","components_UserService","appSetup","setClientId","setUserIsAdmin","handleLoginSuccess","accessTokenResponse","logout","removeItem","userUtility","_args6","approved","userId","ListPageAccordion","components_Accordion_Accordion","RecipeScalingForm_RecipeScalingForm","scaleType","scaleAmount","ListPage_ListIngredient","userServiceSingleton","ListPageFilterForm","filterList","clearFilterValue","filterValue","placeholder","ListPageAccordion_ListPageAccordion","FilterHandler","items","search","haystack","needle","Array","i","toLowerCase","filterHandler","ListPage","updateStateWithRecipes","filteredRecipes","updatedList","filterItems","ListPageFilterForm_ListPageFilterForm","DeleteRecipeModal_DeleteRecipeModal","LoginPageContent","_ref$githubId","href","LoginPage","onSuccess","onFailure","Login_LoginPageContent","GitHubLogin_default","MenuItem","menuClass","path","react_router_dom","to","Routes","showWhenLoggedOut","showWhenLoggedIn","MainMenu","routes","route","Menu_MenuItem","App","hasMounted","setAppComponent","Menu_MainMenu","react_router","App_PrivatePropsRoute","exact","component","App_PropsRoute","renderMergedProps","_len","_key","finalProps","React","PropsRoute","objectWithoutProperties","render","routeProps","PrivatePropsRoute","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58892137.chunk.js","sourcesContent":["/**\n * Message model.\n *\n * @public\n */\nexport default class Message {\n  /**\n   * Message constructor.\n   *\n   * @param {Object} Object\n   * @param {string} status\n   * @param {string} text\n   * @param {Boolean} shown\n   */\n  constructor({ status = '', text = '', shown = true }) {\n    this.status = status ? status : '';\n    this.text = text ? text : '';\n    this.shown = shown;\n  }\n}\n","import Message from '../models/Message';\n\nconst WARNING = 'warning';\nconst ERROR = 'error';\nconst SUCCESS = 'success';\n\n/**\n * MessageService.\n *\n * @public\n */\nclass MessageService {\n  /**\n   * Default value for appComponent.\n   */\n  appComponent = null;\n\n  /**\n   * Set the app component.\n   *\n   * @param {Object} appComponent\n   * @public\n   */\n  setAppComponent(appComponent) {\n    this.appComponent = appComponent;\n    this.appComponent.state.messageUtility = {\n      message: new Message({}),\n      getMessage: () => this.getMessage(),\n      clearMessages: () => this.clearMessages(),\n      setMessage: (status, text) => this.setMessage(status, text),\n      toggleMessageShown: () => this.toggleMessageShown()\n    };\n  }\n\n  /**\n   * Get the message properties\n   *\n   * @public\n   */\n  get message() {\n    if (this.appComponent.state.messageUtility !== undefined) {\n      return this.appComponent.state.messageUtility.message.props;\n    }\n\n    return new Message({});\n  }\n\n  /**\n   * Clear message.\n   *\n   * @public\n   */\n  clearMessages = async () => {\n    if (this.appComponent.state.messageUtility.message.shown) {\n      const nextState = Object.assign({}, this.appComponent.state);\n      nextState.messageUtility.message = new Message({});\n      await this.appComponent.setState(nextState);\n    }\n  };\n\n  /**\n   * Set message.\n   *\n   * @param {string} status\n   * @param {string} text\n   * @public\n   */\n  setMessage = async (status, text) => {\n    console.log('setMessage', status, text);\n    const nextState = Object.assign({}, this.appComponent.state);\n    nextState.messageUtility.message = new Message({ status, text });\n    this.appComponent.setState(nextState);\n  };\n\n  /**\n   * Toggle whether the message has been shown.\n   *\n   * @public\n   */\n  toggleMessageShown = async () => {\n    if (\n      this.appComponent.state.messageUtility !== undefined &&\n      this.appComponent.state.messageUtility.message.shown === false\n    ) {\n      console.log('toggling message');\n      const nextState = Object.assign({}, this.appComponent.state);\n      nextState.messageUtility.message.shown =\n        nextState.messageUtility.message.shown === true ? false : true;\n      this.appComponent.setState(nextState);\n    }\n  };\n\n\n  /**\n   * Available Statuses.\n   * \n   * @public\n   */\n  statuses = () => {\n    return {\n      WARNING: WARNING,\n      ERROR: ERROR,\n      SUCCESS: SUCCESS\n    }\n  }\n  \n  /**\n   * Get the message status after recipe POST has completed.\n   *\n   * @param {bool} saved\n   * @public\n   */\n  getPostMessageStatus = saved => {\n    console.log('getPostMessageStatus saved', saved);\n    return saved ? SUCCESS : ERROR;\n  };\n\n  /**\n   * Get the message after recipe POST has completed.\n   *\n   * @param {Boolean} saved\n   * @public\n   */\n  getSavedRecipeMessage = saved => {\n    return saved ? 'Recipe has been saved.' : 'Recipe has not been saved.';\n  };\n\n  /**\n   * Get the recipe not found status.\n   *\n   * @public\n   */\n  getRecipeNotFoundStatus = () => {\n    return WARNING;\n  }\n\n  /**\n   * Get recipe not found message.\n   * \n   * @public\n   */\n  getRecipeNotFoundMessage = () => {\n    return 'Recipe could not be found, try adding a new recipe';\n  }\n\n  /**\n   * Get the recipe not found status.\n   *\n   * @public\n   */\n  getRecipeUpdateStatus = () => {\n    return SUCCESS;\n  }\n\n  /**\n   * Get recipe not found message.\n   * \n   * @public\n   */\n  getRecipeUpdateMessage = (name = '') => {\n    return name + ' recipe has been updated.';\n  }\n\n  /**\n   * Get the recipe delete status.\n   *\n   * @public\n   */\n  getRecipeDeleteStatus = () => {\n    return SUCCESS;\n  }\n\n  /**\n   * Get recipe delete message.\n   * \n   * @public\n   */\n  getRecipeDeleteMessage = (name = '') => {\n    return name + ' recipe has been deleted.';\n  }\n\n  /**\n   * Get the recipe delete status.\n   *\n   * @public\n   */\n  getRecipeDeleteFailStatus = () => {\n    return ERROR;\n  }\n\n  /**\n   * Get recipe delete message.\n   * \n   * @public\n   */\n  getRecipeDeleteFailMessage = (name = '') => {\n    return name + ' recipe has not been deleted.';\n  }\n}\n\nexport default new MessageService();\n","import React, { Component } from 'react';\nimport messageServiceSingleton from '../MessageService';\nimport './Message.css';\n\n/**\n * Handle messages set in the header.\n */\nexport default class Message extends Component {\n  /**\n   * Get the container class based on the status.\n   *\n   * @param {string} status\n   * @public\n   */\n  getContainerClass = status => {\n    let containerClass = 'Message-container';\n\n    switch (status) {\n      case 'error':\n        containerClass = containerClass.concat(' Message-error');\n        break;\n      case 'success':\n        containerClass = containerClass.concat(' Message-success');\n        break;\n      case 'warning':\n        containerClass = containerClass.concat(' Message-warning');\n        break;\n      default:\n        return '';\n    }\n    return containerClass;\n  };\n\n  /**\n   * Render Message.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {messageServiceSingleton.message && (\n          <div\n            className={this.getContainerClass(\n              messageServiceSingleton.message.status\n            )}\n          >\n            <p className=\"Message-body\">\n              {messageServiceSingleton.message.text}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Message from '../Message/Message';\nimport PropTypes from 'prop-types';\nimport messageServiceSingleton from '../MessageService';\n\nimport './Page.css';\n\n/**\n * Page component.\n *\n * @public\n */\nexport default class Page extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Object).isRequired,\n    pageTitle: PropTypes.string.isRequired\n  };\n\n  /**\n   * Set message state.\n   *\n   * @public\n   */\n  componentDidMount = async () => {\n    messageServiceSingleton.toggleMessageShown();\n  };\n\n  /**\n   * Clear messages if they have been shown.\n   *\n   * @public\n   */\n  componentWillUnmount = async () => {\n    messageServiceSingleton.clearMessages();\n  };\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        <div>\n          <Message />\n        </div>\n        <div className=\"page container\">\n          <div>\n            <h1 className=\"page__title\">{this.props.pageTitle}</h1>\n          </div>\n          <div>{this.props.children}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","/**\n * Ingredient model.\n */\nexport default class Ingredient {\n  /**\n   * Ingredient constructor.\n   *\n   * @param {Object} ing\n   */\n  constructor(ing = {}) {\n    this.name = ing.name ? ing.name : '';\n    this.amount = ing.amount ? ing.amount : '';\n    this.measurementType = ing.measurementType ? ing.measurementType : '';\n  }\n}\n","/**\n * Tag model.\n *\n * @public\n */\nexport default class Tag {\n  /**\n   * Tag constructor.\n   *\n   * @param {Object} tag\n   * @public\n   */\n  constructor(tag = {}) {\n    this.id = tag.id ? tag.id : '';\n    this.name = tag.name ? tag.name : '';\n  }\n}\n","import Ingredient from './Ingredient';\nimport Tag from './Tag';\n\n/**\n * Recipe model.\n *\n * @public\n */\nexport default class Recipe {\n  /**\n   * Recipe constructor.\n   *\n   * @param {Object} recipe\n   */\n  constructor(recipe = {}) {\n    this.id = recipe.id !== '' ? recipe.id : '';\n    this.name = recipe.name ? recipe.name : '';\n    this.description = recipe.description ? recipe.description : '';\n    this.ingredients = this.tranformIngredientData(recipe.ingredients);\n    this.tags = this.transformTagData(recipe.tags);\n  }\n\n  /**\n   * Transform ingredient data into array of Ingredients.\n   * \n   * @param {Object[]} ingData\n   * @public\n   */\n  tranformIngredientData = ingData => {\n    if (!ingData) {\n      return [new Ingredient()];\n    }\n\n    const ingredients = [];\n    ingData.forEach(ing => {\n      ingredients.push(new Ingredient(ing));\n    });\n\n    return ingredients;\n  }\n\n  /**\n   * Transform ingredient data into array of Ingredients.\n   * \n   * @param {Object[]} tagData\n   * @public\n   */\n  transformTagData = tagData => {\n    if (!tagData) {\n      return [new Tag()];\n    }\n\n    const tags = [];\n    tagData.forEach(tag => {\n      tags.push(new Tag(tag));\n    })\n\n    return tags;\n  }\n}\n","/**\n * RecipeConfig.\n *\n * @public\n */\nexport default class RecipeConfig {\n  /**\n   * Get the ingredient measurement types.\n   *\n   * @public\n   */\n  get measurementTypes() {\n    return [\n      {\n        name: 'Each',\n        value: 'ea'\n      },\n      {\n        name: 'Pinch',\n        value: 'pinch'\n      },\n      {\n        name: 'Teaspoon(s)',\n        value: 'tsp'\n      },\n      {\n        name: 'Tablespoon(s)',\n        value: 'tbsp'\n      },\n      {\n        name: 'Cup(s)',\n        value: 'cp'\n      },\n      {\n        name: 'Quart(s)',\n        value: 'qt'\n      },\n      {\n        name: 'Gallon(s)',\n        value: 'gl'\n      },\n      {\n        name: 'Ounce(s)',\n        value: 'oz'\n      },\n      {\n        name: 'Pound(s)',\n        value: 'lbs'\n      },\n      {\n        name: 'Liter(s)',\n        value: 'lt'\n      },\n      {\n        name: 'Milliliter(s)',\n        value: 'ml'\n      },\n      {\n        name: 'Gram(s)',\n        value: 'gr'\n      },\n      {\n        name: 'Kilogram(s)',\n        value: 'kilo'\n      }\n    ];\n  }\n\n  /**\n   * Get textarea configuration.\n   *\n   * @public\n   */\n  get textAreaConfig() {\n    return {\n      rows: '10',\n      columns: '30'\n    };\n  }\n\n  /**\n   * Get the scaling types.\n   *\n   * @public\n   */\n  get scalingTypes() {\n    return [\n      {\n        name: 'Multiply',\n        value: '*'\n      },\n      {\n        name: 'Divide',\n        value: '/'\n      }\n    ];\n  }\n\n  /**\n   * Get the scaling amounts.\n   * \n   * @public\n   */\n  get scalingAmount() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n\n/**\n * Button component.\n * \n * @public\n */\nexport default class Button extends Component {\n  static propTypes = {\n    link: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    attr: PropTypes.objectOf(PropTypes.string),\n    isBtn: PropTypes.bool,\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n    preventDefault: PropTypes.bool\n  };\n\n  /**\n   * Get classes to apply to the button.\n   *\n   * @public\n   */\n  get className() {\n    let classes = 'btn';\n\n    if (\n      this.props.className !== undefined &&\n      this.props.className !== null &&\n      this.props.className !== ''\n    ) {\n      classes += ' ' + this.props.className;\n    }\n\n    return classes;\n  }\n\n  /**\n   * Get attributes to apply to the button.\n   * \n   * @public\n   */\n  get attributes() {\n    let attr = {};\n\n    if (this.props.className) attr['className'] = this.props.className;\n    if (this.props.isBtn) attr['role'] = 'button';\n    if (this.props.onClick) attr['onClick'] = this.onClick;\n\n    attr['href'] = this.props.link;\n\n    return {...attr, ...this.props.attr};\n  }\n\n  /**\n   * Handle click events and preventDefault when needed.\n   * \n   * @public\n   */\n  onClick = (e) => {\n    if (this.props.preventDefault) {\n      e.preventDefault();\n    }\n\n    this.props.onClick();\n  }\n\n  /**\n   * Render Button.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <a {...this.attributes}>\n        {this.props.text}\n      </a>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport RecipeConfig from '../RecipeConfig';\nimport Ingredient from '../../models/Ingredient';\n\nconst recipeConfig = new RecipeConfig();\n\n/**\n * IngredientForm component.\n *\n * @public\n */\nexport default class IngredientForm extends Component {\n  static propTypes = {\n    ingredient: PropTypes.instanceOf(Ingredient),\n    onChange: PropTypes.func.isRequired,\n    showDeleteButton: PropTypes.bool.isRequired,\n    requestDeleteGroup: PropTypes.func.isRequired\n  };\n\n  /**\n   * Handle recipe change events.\n   *\n   * @param {Object} event\n   * @public\n   */\n  handleFieldChange = () => event => {\n    const inputElement = event.target;\n    let ingredient = { ...this.props.ingredient };\n    ingredient[inputElement.name] = inputElement.value;\n    this.props.onChange(ingredient);\n  };\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className=\"form__ingredient\">\n        <div>\n          <label>Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.props.ingredient.name}\n            onChange={this.handleFieldChange()}\n          />\n        </div>\n        <div className=\"form__amountMeasurementWrapper\">\n          <div className=\"form__input--sideBySide inline left\">\n            <div className=\"input__amountMeasurementWrapper\">\n              <label>Amount</label>\n              <input\n                type=\"text\"\n                name=\"amount\"\n                value={this.props.ingredient.amount}\n                onChange={this.handleFieldChange()}\n              />\n            </div>\n          </div>\n          <div className=\"form__input--sideBySide inline left\">\n            <div className=\"input__amountMeasurementWrapper\">\n              <label>Type</label>\n              <select\n                name=\"measurementType\"\n                value={this.props.ingredient.measurementType}\n                onChange={this.handleFieldChange()}\n              >\n                {recipeConfig.measurementTypes.map((measurement, index) => (\n                  <option value={measurement.value} key={index}>\n                    {measurement.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"Ingredient-removeBtn\">\n          {this.props.showDeleteButton ? (\n            <Button\n              text=\"Remove Ingredient\"\n              link=\"#\"\n              className=\"btn btn_secondary\"\n              isBtn={true}\n              onClick={this.props.requestDeleteGroup}\n              preventDefault={true}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport IngredientForm from './IngredientForm';\nimport Button from '../Button/Button';\nimport Ingredient from '../../models/Ingredient';\n\n/**\n * IngredientFormContainer component.\n *\n * @public\n */\nexport default class IngredientFormContainer extends Component {\n  static propTypes = {\n    ingredients: PropTypes.arrayOf(PropTypes.instanceOf(Ingredient)),\n    onChange: PropTypes.func.isRequired,\n    requestDeleteGroup: PropTypes.func.isRequired,\n    requestAddGroup: PropTypes.func.isRequired\n  };\n\n  /**\n   * Get whether we should delete the the group.\n   */\n  get shouldShowDeleteButton() {\n    return this.props.ingredients.length > 1;\n  }\n\n  /**\n   * Handle ingredient change events.\n   *\n   * @param {number} index\n   * @param {Object} newIngValues\n   * @public\n   */\n  handleFieldChange = index => newIngValues => {\n    const ingredients = [...this.props.ingredients];\n    ingredients[index] = new Ingredient(newIngValues);\n    this.props.onChange(ingredients);\n  };\n\n  /**\n   * Render IngredientFormContainer.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        <h4>Ingredients</h4>\n        <div className=\"container--flex-row\">\n          {this.props.ingredients.map((ingredient, index) => (\n            <IngredientForm\n              key={index}\n              ingredient={ingredient}\n              onChange={this.handleFieldChange(index)}\n              showDeleteButton={this.shouldShowDeleteButton}\n              requestDeleteGroup={() => this.props.requestDeleteGroup(index)}\n            />\n          ))}\n        </div>\n        <div className=\"form__btnContainer--center\">\n          <Button\n            text=\"Add Ingredient\"\n            link=\"#\"\n            className=\"btn btn_tertiary\"\n            isBtn={true}\n            onClick={this.props.requestAddGroup}\n            preventDefault={true}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tag from '../../models/Tag';\nimport Button from '../Button/Button';\n\n/**\n * TagForm component.\n *\n * @public\n */\nexport default class TagForm extends Component {\n  static propTypes = {\n    tag: PropTypes.instanceOf(Tag),\n    onChange: PropTypes.func.isRequired\n  };\n\n  /**\n   * Get the tag.\n   *\n   * @public\n   */\n  get tag() {\n    return this.props.tag;\n  }\n\n  /**\n   * Handle tag change events.\n   *\n   * @param {Object} event\n   * @public\n   */\n  handleFieldChange = () => event => {\n    const inputElement = event.target;\n    let tag = { ...this.props.tag };\n    tag[inputElement.name] = inputElement.value;\n    this.props.onChange(tag);\n  };\n\n  /**\n   * Render TagForm.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className=\"input__tag\">\n        <div>\n          <label className=\"isHidden\">Tag</label>\n          <input\n            className=\"TagForm-input\"\n            type=\"text\"\n            name=\"name\"\n            value={this.props.tag.name}\n            onChange={this.handleFieldChange()}\n          />\n          <Button\n            text=\"&times;\"\n            link=\"#\"\n            isBtn={false}\n            className=\"icon icon--remove\"\n            onClick={() => this.props.requestDeleteTag()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tag from '../../models/Tag';\nimport TagForm from './TagForm';\nimport Button from '../Button/Button';\n\n/**\n * TagFormContainer component.\n *\n * @public\n */\nexport default class TagFormContainer extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    requestDeleteTag: PropTypes.func.isRequired,\n    tags: PropTypes.arrayOf(PropTypes.instanceOf(Tag))\n  };\n\n  /**\n   * Handle tag change events.\n   *\n   * @param {number} index\n   * @param {Object} newTagValues\n   * @public\n   */\n  handleFieldChange = index => newTagValues => {\n    const tags = [...this.props.tags];\n    tags[index] = new Tag(newTagValues);\n    this.props.onChange(tags);\n  };\n\n  /**\n   * Render TagFormContainer.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className=\"form__tags\">\n        <h4>Tags</h4>\n        <div className=\"input__tagContainer\">\n          {this.props.tags.map((tag, index) => (\n            <TagForm\n              key={index}\n              tag={tag}\n              index={index}\n              onChange={this.handleFieldChange(index)}\n              requestDeleteTag={() => this.props.requestDeleteTag(index)}\n            />\n          ))}\n        </div>\n        <div className=\"form__btnContainer--center\">\n          <Button\n            text=\"Add Tag\"\n            link=\"#\"\n            className=\"btn btn_tertiary\"\n            isBtn={true}\n            onClick={this.props.requestAddTag}\n            preventDefault={true}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeConfig from '../RecipeConfig';\nimport IngredientFormContainer from './IngredientFormContainer';\nimport Recipe from '../../models/Recipe';\nimport TagFormContainer from './TagFormContainer';\n\nconst recipeConfig = new RecipeConfig();\n\n/**\n * RecipeForm component.\n *\n * @public\n */\nexport default class RecipeForm extends Component {\n  static propTypes = {\n    recipe: PropTypes.instanceOf(Recipe),\n    handleSubmit: PropTypes.func.isRequired,\n    handleRecipeFieldChange: PropTypes.func.isRequired,\n    handleChildFieldChange: PropTypes.func.isRequired,\n    handleDeleteIngredientGroup: PropTypes.func.isRequired,\n    handleAddIngredientGroup: PropTypes.func.isRequired\n  };\n\n  /**\n   * Handle form submit.\n   *\n   * @async\n   * @param {Object} event\n   * @public\n   */\n  handleSubmit = async event => {\n    this.props.handleSubmit(event);\n  };\n\n  /**\n   * Render RecipeForm.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <form className=\"container--wide\" onSubmit={this.props.handleSubmit}>\n        <div className=\"input__container\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.props.recipe.name}\n            onChange={this.props.handleRecipeFieldChange()}\n          />\n        </div>\n        <div className=\"input__container\">\n          <label>Description:</label>\n          <textarea\n            name=\"description\"\n            rows={recipeConfig.textAreaConfig.rows}\n            cols={recipeConfig.textAreaConfig.columns}\n            value={this.props.recipe.description}\n            onChange={this.props.handleRecipeFieldChange()}\n          />\n        </div>\n        <div className=\"input__container\">\n          <TagFormContainer\n            tags={this.props.recipe.tags}\n            onChange={this.props.handleChildFieldChange('tags')}\n            requestDeleteTag={index =>\n              this.props.handleDeleteItemFromArray(index, 'tags')\n            }\n            requestAddTag={() => this.props.handleAddTag()}\n          />\n        </div>\n        <div className=\"input__container\">\n          <IngredientFormContainer\n            ingredients={this.props.recipe.ingredients}\n            onChange={this.props.handleChildFieldChange('ingredients')}\n            requestDeleteGroup={index =>\n              this.props.handleDeleteIngredientGroup(index)\n            }\n            requestAddGroup={this.props.handleAddIngredientGroup}\n          />\n        </div>\n\n        <div>\n          <input className=\"btn btn_primary\" type=\"submit\" value=\"Submit\" />\n        </div>\n      </form>\n    );\n  }\n}\n","/**\n * User model.\n *\n * @public\n */\nexport default class User {\n    /**\n     * User constructor.\n     *\n     * @param {Object} User\n     * @public\n     */\n    constructor(user = {}) {\n      this.accessToken = user.accessToken ? user.accessToken : '';\n      this.clientId = user.clientId ? user.clientId : '';\n      this.githubId = user.githubId ? user.githubId : '';\n    }\n  }\n  ","import Recipe from '../models/Recipe';\nimport User from '../models/User';\n\n/**\n * Handle storage of data.\n */\nexport default class StorageHandler {\n  /**\n   * StorageHandler constructor.\n   *\n   * @public\n   */\n  constructor() {\n    this.endpoints = {\n      host: this.host,\n      postRecipes: '/recipes/post',\n      updateRecipe: '/recipes/update',\n      deleteRecipe: '/recipes/delete',\n      getRecipes: '/recipes/get'\n    };\n  }\n\n  /**\n   * Get host for API requests.\n   *\n   * @public\n   */\n  get host() {\n    let host = window.location.protocol + '//localhost:5000';\n    if (window.location.host !== 'localhost:3000')\n      host = window.location.protocol + '//' + window.location.host + ':5000';\n\n    return host;\n  }\n\n  /**\n   * Get user from local storage.\n   *\n   * @param {string} storageKey\n   * @public\n   */\n  getUser = async storageKey => {\n    let user = await localStorage.getItem(storageKey);\n    let userData = {};\n\n    if (user) {\n      userData = JSON.parse(user);\n    }\n\n    return new User(userData);\n  };\n\n  /**\n   * Set user to local storage.\n   *\n   * @param {User} user\n   * @param {string} storageKey\n   * @public\n   */\n  setUser = async (user, storageKey) => {\n    await localStorage.setItem(storageKey, JSON.stringify(user));\n  };\n\n  removeUser = async storageKey => {};\n\n  /**\n   * Get headers to send a POST request.\n   *\n   * @public\n   */\n  get postHeaders() {\n    const headers = new Headers();\n    headers.append('Content-type', 'application/json');\n    headers.append('Accept', 'application/json');\n    return headers;\n  }\n\n  /**\n   * Write the data to a storage.\n   *\n   * @param {data}\n   * @public\n   */\n  postRecipe = async data => {\n    const json = JSON.stringify(data);\n    const headers = this.postHeaders;\n\n    const options = {\n      method: 'POST',\n      headers,\n      body: json\n    };\n\n    return await this.makeRequest(this.endpoints.postRecipes, options)\n      .then(responseJson => {\n        return responseJson;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Write the data to a storage.\n   *\n   * @param {data}\n   * @public\n   */\n  putRecipe = async data => {\n    const json = JSON.stringify(data);\n    const headers = this.postHeaders;\n\n    const options = {\n      method: 'PUT',\n      headers,\n      body: json\n    };\n\n    return await this.makeRequest(this.endpoints.updateRecipe, options)\n      .then(responseJson => {\n        return responseJson;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Get the recipes from storage.\n   *\n   * @public\n   */\n  getRecipes = async () => {\n    return this.makeRequest(this.endpoints.getRecipes)\n      .then(responseJson => {\n        const responseData = JSON.parse(responseJson.data);\n        const recipes = [];\n\n        responseData.data.forEach(recipeData => {\n          recipes.push(new Recipe(recipeData));\n        });\n\n        return recipes;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Get recipe by ID.\n   *\n   * @param {number} id\n   * @public\n   */\n  getRecipeById = async id => {\n    const endpoint = this.endpoints.getRecipes + '/' + id;\n\n    return await this.makeRequest(endpoint)\n      .then(responseJson => {\n        if (this.isEmpty(responseJson.data)) {\n          return undefined;\n        }\n        const parsedData = JSON.parse(responseJson.data);\n\n        if (parsedData !== undefined) {\n          return new Recipe(parsedData);\n        }\n\n        return undefined;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Check if an object is empty.\n   *\n   * @param {Object} obj\n   * @public\n   */\n  isEmpty = obj => {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n    return true;\n  };\n\n  /**\n   * Delete recipe by ID.\n   *\n   * @param {number} id\n   * @public\n   */\n  deleteRecipeById = async id => {\n    const endpoint = this.endpoints.deleteRecipe + '/' + id;\n\n    const options = {\n      method: 'DELETE'\n    };\n\n    return await this.makeRequest(endpoint, options)\n      .then(responseJson => {\n        const responseData = JSON.parse(responseJson.data);\n        return responseData;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Make a request.\n   *\n   * @param {endpoint}\n   * @param {options}\n   * @public\n   */\n  makeRequest = async (endpoint, options = {}) => {\n    return fetch(this.endpoints.host + endpoint, options)\n      .then(response => response.json())\n      .then(result => {\n        return result;\n      })\n      .catch(error => {\n        console.log('error', error);\n        return error;\n      });\n  };\n}\n","import React, { Component } from 'react';\nimport Page from '../Page';\nimport Recipe from '../../../models/Recipe';\nimport Ingredient from '../../../models/Ingredient';\nimport Tag from '../../../models/Tag';\nimport RecipeForm from '../../Form/RecipeForm';\nimport StorageHandler from '../../StorageHandler';\nimport messageServiceSingleton from '../../MessageService';\nimport './FormPage.css';\n\nconst storageHandler = new StorageHandler();\n\n/**\n * FormPage component.\n *\n * @public\n */\nexport default class FormPage extends Component {\n  /**\n   * FormPage constructor.\n   *\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipe: new Recipe(),\n      pageTitle: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /**\n   * Get recipe for editing\n   *\n   * @public\n   */\n  componentDidMount = async () => {\n    await this.getRecipeFromPath();\n    this.setPageTitle();\n  };\n\n  /**\n   * Set the page title based on initial state.\n   *\n   * @public\n   */\n  setPageTitle = () => {\n    const state = { ...this.state };\n\n    if (this.state.recipe.name !== '' && this.state.recipe.id !== '') {\n      state.pageTitle = 'Edit ' + this.state.recipe.name + ' recipe';\n    } else {\n      state.pageTitle = 'Add a Recipe';\n    }\n\n    this.setState(state);\n  };\n\n  /**\n   * Get recipe from path for editing.\n   *\n   * @public\n   */\n  getRecipeFromPath = async () => {\n    if (!this.props.match.params.hasOwnProperty('recipeId')) {\n      return;\n    }\n\n    const recipeId = parseInt(this.props.match.params.recipeId);\n    await storageHandler.getRecipeById(recipeId).then(recipe => {\n      if (recipe instanceof Recipe) {\n        this.setState({ recipe: recipe });\n      } else {\n        messageServiceSingleton.setMessage(\n          messageServiceSingleton.getRecipeNotFoundStatus(),\n          messageServiceSingleton.getRecipeNotFoundMessage()\n        );\n        this.props.history.push('/recipe/add');\n      }\n    });\n  };\n\n  /**\n   * Handle top level field changes.\n   *\n   * @param {Object} event\n   * @public\n   */\n  handleRecipeFieldChange = () => event => {\n    const recipeFieldElement = event.target;\n    const recipe = this.state.recipe;\n    recipe[recipeFieldElement.name] = recipeFieldElement.value;\n    this.setState({\n      recipe: recipe\n    });\n  };\n\n  /**\n   * Handle child field changes.\n   *\n   * @param {string} field\n   * @param {Object} newValuesCollection\n   * @public\n   */\n  handleChildFieldChange = field => newValuesCollection => {\n    const state = { ...this.state };\n    state.recipe[field] = newValuesCollection;\n    this.setState(state);\n  };\n\n  /**\n   * Add an ingredient group.\n   *\n   * @public\n   */\n  handleAddIngredientGroup = () => {\n    const recipe = this.state.recipe;\n    recipe.ingredients = recipe.ingredients.concat([new Ingredient()]);\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Add a tag.\n   *\n   * @public\n   */\n  handleAddTag = () => {\n    const recipe = this.state.recipe;\n    recipe.tags = recipe.tags.concat([new Tag()]);\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Remove an ingredient group.\n   *\n   * @param {number} index\n   * @public\n   */\n  handleDeleteIngredientGroup = index => {\n    const recipe = this.state.recipe;\n    recipe.ingredients = recipe.ingredients.filter(\n      (ing, ingIdx) => index !== ingIdx\n    );\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Remove an item from array.\n   *\n   * @param {number} index\n   * @public\n   */\n  handleDeleteItemFromArray = (index, propName) => {\n    console.log(index, propName);\n    const recipe = this.state.recipe;\n    recipe[propName] = recipe[propName].filter(\n      (item, itemIdx) => index !== itemIdx\n    );\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Handle form submit.\n   *\n   * @async\n   * @param {Object} event\n   * @public\n   */\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    if (\n      this.state.recipe.hasOwnProperty('id') &&\n      this.state.recipe.id !== '' &&\n      this.state.recipe.id !== undefined\n    ) {\n      // Handle update recipe.\n      await storageHandler.putRecipe(this.state.recipe).then(res => {\n        messageServiceSingleton.setMessage(\n          messageServiceSingleton.getRecipeUpdateStatus(res.data),\n          messageServiceSingleton.getRecipeUpdateMessage(this.state.recipe.name)\n        );\n        return res;\n      });\n    } else {\n      // Handle save new recipe.\n      await storageHandler.postRecipe(this.state.recipe).then(res => {\n        messageServiceSingleton.setMessage(\n          messageServiceSingleton.getPostMessageStatus(res.data),\n          messageServiceSingleton.getSavedRecipeMessage(res.data)\n        );\n        return res;\n      });\n    }\n\n    this.props.history.push('/');\n  };\n\n  /**\n   * Render FormPage.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <Page pageTitle={this.state.pageTitle}>\n        <RecipeForm\n          recipe={this.state.recipe}\n          handleSubmit={event => this.handleSubmit(event)}\n          handleRecipeFieldChange={() => this.handleRecipeFieldChange()}\n          handleChildFieldChange={fieldName =>\n            this.handleChildFieldChange(fieldName)\n          }\n          handleDeleteIngredientGroup={index =>\n            this.handleDeleteIngredientGroup(index)\n          }\n          handleDeleteItemFromArray={(index, propName) => {\n            this.handleDeleteItemFromArray(index, propName);\n          }}\n          handleAddIngredientGroup={() => this.handleAddIngredientGroup()}\n          handleAddTag={() => this.handleAddTag()}\n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\n\nimport './modal.css';\n\n/**\n * DeleteModal component.\n *\n * @public\n */\nexport default class Modal extends Component {\n  static propTypes = {\n    show: PropTypes.bool.isRequired,\n    hideModal: PropTypes.func.isRequired,\n    children: PropTypes.instanceOf(Object).isRequired,\n  };\n\n  /**\n   * Get the show hide class name.\n   *\n   * @param {Boolean} show\n   * @public\n   */\n  getShowHideClassName = show => {\n    return show ? 'container__modal display' : 'container__modal isHidden';\n  };\n\n  /**\n   * Render the modal.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className={this.getShowHideClassName(this.props.show)}>\n        <section className=\"modal__body\">\n          {this.props.children}\n          <div className=\"modal__btnCloseContainer\">\n            <Button\n              text=\"Close\"\n              link=\"#\"\n              className=\"btn btn_tertiary\"\n              isBtn={true}\n              onClick={() => this.props.hideModal()}\n            />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport Button from '../Button/Button';\n\n/**\n * DeleteRecipeModal component.\n *\n * @public\n */\nexport default class DeleteRecipeModal extends Component {\n  static propTypes = {\n    showModal: PropTypes.bool.isRequired,\n    hideModal: PropTypes.func.isRequired,\n    handleDeleteRecipe: PropTypes.func.isRequired,\n    deleteRecipe: PropTypes.instanceOf(Object).isRequired\n  };\n\n  /**\n   * Get the name of the recipe to delete.\n   *\n   * @public\n   */\n  get recipeName() {\n    if (\n      this.props.deleteRecipe.hasOwnProperty('name') &&\n      this.props.deleteRecipe.name !== undefined &&\n      this.props.deleteRecipe.name !== null &&\n      this.props.deleteRecipe.name !== ''\n    ) {\n      return this.props.deleteRecipe.name;\n    }\n\n    return 'this';\n  }\n  render() {\n    return (\n      <Modal show={this.props.showModal} hideModal={this.props.hideModal}>\n        <div className=\"modal__deleteBody\">\n          <h3>Are you sure you would like delete {this.recipeName} recipe?</h3>\n          <div>\n            <Button\n              text=\"Yes\"\n              link=\"#\"\n              className=\"btn btn_secondary\"\n              isBtn={true}\n              onClick={() => this.props.handleDeleteRecipe()}\n            />\n            <Button\n              text=\"No\"\n              link=\"#\"\n              className=\"btn btn_primary\"\n              isBtn={true}\n              onClick={() => this.props.hideModal()}\n            />\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * AccordionSection component.\n *\n * @public\n */\nclass AccordionSection extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Object).isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  };\n\n  /**\n   * Get arrow used for accordion section.\n   *\n   * @param {isOpen}\n   */\n  getArrowIcon(isOpen) {\n    if (isOpen) return <span>&#9660;</span>;\n\n    return <span>&#9650;</span>;\n  }\n\n  /**\n   * Get the container class to specify if the accordion is open or not.\n   *\n   * @public\n   */\n  getContainerClass() {\n    if (this.props.isOpen) return 'accordion accordion--selected';\n\n    return 'accordion';\n  }\n\n  /**\n   * Handle open and closing the accordion.\n   *\n   * @public\n   */\n  onClick = event => {\n    this.props.onClick(this.props.label, event);\n  };\n\n  /**\n   * Render AccordionSection.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className={this.getContainerClass()}>\n        <div className=\"accordion__title\" onClick={this.onClick}>\n          <h3 className=\"inline\">{this.props.label}</h3>\n          <span className=\"right\">{this.getArrowIcon(this.props.isOpen)}</span>\n        </div>\n\n        {this.props.isOpen && (\n          <div className=\"accordion__body\">\n            <hr />\n            {this.props.description !== '' && <p>{this.props.description}</p>}\n            <div className=\"accordion__bodyInner\">{this.props.children}</div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AccordionSection;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AccordionSection from './AccordionSection';\n\nimport './accordion.css';\n\n/**\n * Accordion component.\n * \n * @public\n */\nclass Accordion extends Component {\n  static propTypes = {\n    allowMultipleOpen: PropTypes.bool,\n    children: PropTypes.instanceOf(Object).isRequired\n  };\n\n  static defaultProps = {\n    allowMultipleOpen: false\n  };\n\n  /**\n   * Accordion constructor.\n   *\n   * @param {Object} props\n   */\n  constructor(props) {\n    super(props);\n\n    const openSections = {};\n\n    this.props.children.forEach((child, index) => {\n      if (child.props.isOpen) {\n        openSections[child.props.label] = true;\n      } else {\n      }\n    });\n\n    this.state = { openSections };\n  }\n\n  /**\n   * Handle opening and closing accordions.\n   *\n   * @param {string} label\n   * @public\n   */\n  onClick = label => {\n    const {\n      props: { allowMultipleOpen },\n      state: { openSections }\n    } = this;\n\n    const isOpen = !!openSections[label];\n\n    if (allowMultipleOpen) {\n      this.setState({\n        openSections: {\n          ...openSections,\n          [label]: !isOpen\n        }\n      });\n    } else {\n      this.setState({\n        openSections: {\n          [label]: !isOpen\n        }\n      });\n    }\n  };\n\n  /**\n   * Render Accordion.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {this.props.children.map((child, index) => (\n          <AccordionSection\n            key={index}\n            isOpen={!!this.state.openSections[child.props.label]}\n            label={child.props.label}\n            description={child.props.description}\n            onClick={this.onClick}\n          >\n            {child.props.children}\n          </AccordionSection>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Accordion;\n","import React from 'react';\n\n/**\n * Return a scaled ingredient amount\n * \n * Doing this inline allows values to be changed on the fly more easily.\n * \n * @param {Ingredient} ingredient \n * @param {Object} scaled \n */\nfunction scaleIngredient(ingredient, scaled) {\n  const { type, amount } = scaled;\n  let ingredientAmount = ingredient.amount;\n\n  if (type && amount ) {\n    ingredientAmount = String(\n      type === '*'\n        ? ingredient.amount * amount\n        : ingredient.amount / amount\n    );\n  }\n\n  return ingredientAmount;\n}\n\n/**\n * ListIngredient Component.\n */\nconst ListIngredient = ({ingredient, scaled = {}}) => {\n  const amount = scaleIngredient(ingredient, scaled);\n  return (\n    <li>\n        <div className=\"container--flex-row\">\n          <span className=\"ingredient__amount\">{amount} {ingredient.measurementType}</span>\n          <span className=\"ingredient__label\">{ingredient.name}</span>\n        </div>\n      </li>\n  )\n}\n\nexport default ListIngredient;","import React, { Component } from 'react';\nimport RecipeConfig from '../RecipeConfig';\n\nconst recipeConfig = new RecipeConfig();\n\n/**\n * RecipeScalingForm component.\n *\n * @public\n */\nexport default class RecipeScalingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scalingType: recipeConfig.scalingTypes[0].value,\n      scalingAmount: recipeConfig.scalingAmount[0]\n    };\n  }\n\n  /**\n   * Handle form field changes.\n   *\n   * @param {Object} event\n   * @public\n   */\n  handleFieldChange = () => async event => {\n    const fieldElement = event.target;\n    const state = Object.assign({}, this.state);\n    state[fieldElement.name] = fieldElement.value;\n    await this.setState(state);\n  };\n\n  /**\n   * Handle form submit.\n   *\n   * @async\n   * @param {Object} event\n   * @public\n   */\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.props.scaleRecipe(\n      this.props.index,\n      this.state.scalingType,\n      this.state.scalingAmount\n    );\n  };\n\n  render() {\n    return (\n      <form className=\"form__scale\" onSubmit={this.handleSubmit}>\n        <div className=\"input__wrapper--full inline left\">\n          <label>Scaling Type</label>\n          <select\n            name=\"scalingType\"\n            value={this.state.scalingType}\n            onChange={this.handleFieldChange()}\n          >\n            {recipeConfig.scalingTypes.map((scalingType, index) => (\n              <option value={scalingType.value} key={index}>\n                {scalingType.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"input__wrapper--full inline left\">\n          <label>Change by</label>\n          <select\n            name=\"scalingAmount\"\n            value={this.state.scalingAmount}\n            onChange={this.handleFieldChange()}\n          >\n            {recipeConfig.scalingAmount.map((scalingAmount, index) => (\n              <option value={scalingAmount} key={index}>\n                {scalingAmount}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"inline left\">\n          <input\n            className=\"btn btn_primary btn_scale\"\n            type=\"submit\"\n            value=\"Scale Recipe\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\n","import StorageHandler from './StorageHandler';\n\nconst storageHandler = new StorageHandler();\n\n/**\n * AuthHandler service.\n *\n * @public\n */\nexport default class AuthHandler {\n  /**\n   * StorageHandler constructor.\n   *\n   * @public\n   */\n  constructor() {\n    this.endpoints = {\n      host: storageHandler.host,\n      redirectUri: window.location.protocol + '//' + window.location.host + '/login',\n      accessToken: '/auth/login',\n      clientId: '/auth/get/client_id',\n      isUserAdmin: '/auth/get/isUserAdmin'\n    };\n  }\n\n  /**\n   * Get the client_id from the server.\n   *\n   * @public\n   */\n  getClientId = async () => {\n    const response = await this.makeRequest(this.endpoints.clientId);\n\n    if (!response.hasOwnProperty('data')) {\n      return '';\n    }\n\n    return response.data;\n  };\n\n  /**\n   * Get the access github access token\n   *\n   * @param {string} code\n   * @public\n   */\n  getAccessToken = async code => {\n    const endpoint = this.endpoints.accessToken + '/' + code;\n    const response = await this.makeRequest(endpoint);\n\n    if (!response.hasOwnProperty('data')) {\n      return '';\n    }\n\n    return response;\n  };\n\n  /**\n   * Find out whether the user that logged in is admin.\n   *\n   * @param {User} user\n   * @public\n   */\n  isUserAdmin = async user => {\n    if (!user.hasOwnProperty('accessToken') || user.accessToken === '') {\n      return false;\n    }\n\n    const endpoint = this.endpoints.isUserAdmin + '/' + user.accessToken;\n    const response = await this.makeRequest(endpoint);\n    return JSON.parse(response.user);\n  };\n\n  /**\n   * Make a request.\n   *\n   * @param {endpoint}\n   * @param {options}\n   * @public\n   */\n  makeRequest = async (endpoint, options = {}) => {\n    return fetch(this.endpoints.host + endpoint, options)\n      .then(response => response.json())\n      .then(result => result)\n      .catch(error => {\n        console.log('error', error);\n        return error;\n      });\n  };\n}\n","import AuthHandler from './AuthHandler';\nimport StorageHandler from './StorageHandler';\nimport User from '../models/User';\n\nconst authHandler = new AuthHandler();\nconst storageHandler = new StorageHandler();\n\n/**\n * UserService.\n *\n * @public\n */\nclass UserService {\n  /**\n   * Default value for appComponent.\n   */\n  appComponent = null;\n\n  /**\n   * Set the app component.\n   *\n   * @param {Object} appComponent\n   * @public\n   */\n  setAppComponent(appComponent) {\n    this.appComponent = appComponent;\n    this.appComponent.state.userUtility = {\n      user: new User(),\n      storageKey: 'recipeAppUser',\n      isUserAdmin: false\n    };\n  }\n\n  /**\n   * Get the client id.\n   *\n   * @public\n   */\n  get clientId() {\n    return this.appComponent.state.userUtility.user.clientId;\n  }\n\n  get githubId() {\n    return this.appComponent.state.userUtility.user.githubId;\n  }\n\n  /**\n   * Get whether the user is admin.\n   *\n   * @public\n   */\n  get isUserAdmin() {\n    return this.appComponent.state.userUtility.isUserAdmin;\n  }\n\n  /**\n   * AppComponent setup\n   *\n   * @public\n   */\n  appSetup = async () => {\n    await this.getUser();\n    await this.setClientId();\n    await this.setUserIsAdmin();\n  };\n\n  /**\n   * Handle successful login.\n   *\n   * @param {Object} response\n   * @public\n   */\n  handleLoginSuccess = async response => {\n    let accessToken = '';\n    const accessTokenResponse = await authHandler.getAccessToken(response.code);\n\n    if (accessTokenResponse.hasOwnProperty('data')) {\n      accessToken = accessTokenResponse.data;\n    }\n\n    await this.setUser(accessToken);\n    await this.setUserIsAdmin();\n  };\n\n  logout = async () => {\n    await localStorage.removeItem(\n      this.appComponent.state.userUtility.storageKey\n    );\n    const nextState = Object.assign({}, this.appComponent.state);\n\n    nextState.userUtility.user = new User({\n      accessToken: '',\n      clientId: this.clientId\n    });\n    nextState.userUtility.isUserAdmin = false;\n\n    await this.appComponent.setState(nextState);\n  };\n\n  /**\n   * Get the client id.\n   *\n   * @public\n   */\n  setClientId = async () => {\n    if (this.appComponent.state.userUtility.user.clientId !== '') {\n      return;\n    }\n\n    const nextState = Object.assign({}, this.appComponent.state);\n    nextState.userUtility.user.clientId = await authHandler.getClientId();\n    this.appComponent.setState(nextState);\n  };\n\n  /**\n   * Get the user from local storage if it exists.\n   *\n   * @public\n   */\n  getUser = async () => {\n    const nextState = Object.assign({}, this.appComponent.state);\n    nextState.userUtility.user = await storageHandler.getUser(\n      this.appComponent.state.userUtility.storageKey\n    );\n    this.appComponent.setState(nextState);\n  };\n\n  /**\n   * Set the user information using the accesstoken.\n   *\n   * @param {string} accessToken\n   * @public\n   */\n  setUser = async (accessToken = '') => {\n    const nextState = Object.assign({}, this.appComponent.state);\n    nextState.userUtility.user.accessToken = accessToken;\n\n    storageHandler.setUser(\n      nextState.userUtility.user,\n      nextState.userUtility.storageKey\n    );\n\n    this.appComponent.setState(nextState);\n  };\n\n  /**\n   * Get whether a user is admin.\n   *\n   * @public\n   */\n  setUserIsAdmin = async () => {\n    const user = await authHandler.isUserAdmin(\n      this.appComponent.state.userUtility.user\n    );\n    const nextState = Object.assign({}, this.appComponent.state);\n    nextState.userUtility.isUserAdmin = user.approved;\n    nextState.userUtility.user.githubId = user.userId;\n    this.appComponent.setState(nextState);\n  };\n}\n\nexport default new UserService();\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Accordion from './Accordion';\nimport ListIngredient from '../Page/ListPage/ListIngredient';\nimport Button from '../Button/Button';\nimport RecipeScalingForm from '../Form/RecipeScalingForm';\nimport Recipe from '../../models/Recipe';\nimport userServiceSingleton from '../UserService';\n\n/**\n * ListPageAccordion component.\n *\n * @public\n */\nexport default class ListPageAccordion extends Component {\n  static propTypes = {\n    showModal: PropTypes.func.isRequired,\n    recipes: PropTypes.arrayOf(PropTypes.instanceOf(Recipe)).isRequired\n  };\n\n  /**\n   * Render ListPageAccordion.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className=\"container--wide\">\n        <Accordion allowMultipleOpen>\n          {this.props.recipes.map((recipe, index) => (\n            <div\n              key={index}\n              label={recipe.name}\n              description={recipe.description}\n            >\n              <RecipeScalingForm\n                index={index}\n                scaleRecipe={(index, scaleType, scaleAmount) =>\n                  this.props.scaleRecipe(index, scaleType, scaleAmount)\n                }\n              />\n\n              <h3>Ingredients</h3>\n              {recipe.hasOwnProperty('scaled') && (\n                <div>\n                  <h4>\n                    {recipe.scaled.type === '*'\n                      ? 'Multiplied '\n                      : 'Divided '}\n                    by {recipe.scaled.amount}\n                  </h4>\n                </div>\n              )}\n              <ul>\n                {recipe.ingredients.map((ingredient, index) => (\n                  <ListIngredient\n                    key={index}\n                    ingredient={ingredient}\n                    scaled={recipe.scaled}\n                  />\n                ))}\n              </ul>\n              {userServiceSingleton.isUserAdmin && (\n                <div>\n                  <Button\n                    text=\"Edit recipe\"\n                    link={'recipe/edit/' + recipe.id}\n                    className=\"btn btn_tertiary\"\n                    isBtn={true}\n                  />\n                  <Button\n                    text=\"Delete recipe\"\n                    link=\"#\"\n                    className=\"btn btn_secondary\"\n                    isBtn={true}\n                    onClick={() => this.props.showModal(recipe)}\n                  />\n                </div>\n              )}\n            </div>\n          ))}\n        </Accordion>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ListPageAccordion from '../Accordion/ListPageAccordion';\nimport Recipe from '../../models/Recipe';\nimport Button from '../Button/Button';\n\n/**\n * ListPageFilterForm component.\n *\n * @public\n */\nexport default class ListPageFilterForm extends Component {\n  static propTypes = {\n    showModal: PropTypes.func.isRequired,\n    filterList: PropTypes.func.isRequired,\n    clearFilterValue: PropTypes.func.isRequired,\n    filterValue: PropTypes.string,\n    recipes: PropTypes.arrayOf(PropTypes.instanceOf(Recipe))\n  };\n\n  /**\n   * Handle filter list items.\n   *\n   * @param {Object} event\n   * @public\n   */\n  filterList = event => {\n    event.preventDefault();\n\n    // Only filter when the input changes, not on form submit.\n    if (event.target.name === 'filterInput') {\n      this.props.filterList(event);\n    }\n  };\n\n  /**\n   * Render ListPageFilterForm\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className=\"container--wide\">\n        <form onSubmit={this.filterList}>\n          <fieldset>\n            <Button\n              text=\"Clear filter\"\n              link=\"#\"\n              isBtn={false}\n              className=\"btn btn_secondary btn_clearFilter\"\n              preventDefault={true}\n              onClick={() => this.props.clearFilterValue()}\n            />\n            <span className=\"input__wrapper--full\">\n              <input\n                type=\"text\"\n                name=\"filterInput\"\n                value={this.props.filterValue}\n                className=\"input__text\"\n                placeholder=\"Search by Recipe name, Ingredient name, or Tag name\"\n                onChange={this.filterList}\n              />\n            </span>\n          </fieldset>\n        </form>\n        <ListPageAccordion\n          recipes={this.props.recipes}\n          showModal={recipe => this.props.showModal(recipe)}\n          scaleRecipe={(index, scaleType, scaleAmount) =>\n            this.props.scaleRecipe(index, scaleType, scaleAmount)\n          }\n        />\n      </div>\n    );\n  }\n}\n","/**\n * FilterHandler\n *\n * Handle live filtering.\n */\nexport default class FilterHandler {\n  /**\n   * Filter a array by filter value.\n   *\n   * @param {Object[]} items\n   * @param {string}} filterValue\n   */\n  filterItems(items, filterValue) {\n    items = items.filter(item => {\n      return this.search(item, filterValue);\n    });\n\n    return items;\n  }\n\n  /**\n   * Search for a match recursively.\n   *\n   * @param {*} haystack\n   * @param {string} string\n   * @public\n   */\n  search(haystack, needle) {\n    if (haystack instanceof Array) {\n      for (let i = 0; i < haystack.length; i++) {\n        if (this.search(haystack[i], needle)) {\n          return true;\n        }\n      }\n    } else if (typeof haystack === 'object') {\n      for (const key in haystack) {\n        if (this.search(haystack[key], needle)) {\n          return true;\n        }\n      }\n    } else {\n      return (\n        String(haystack)\n          .toLowerCase()\n          .search(needle.toLowerCase()) !== -1\n      );\n    }\n\n    return false;\n  }\n}\n","import React, { Component } from 'react';\nimport Page from '../Page';\nimport Recipe from '../../../models/Recipe';\nimport DeleteRecipeModal from '../../Modal/DeleteRecipeModal';\nimport ListPageFilterForm from '../../Form/ListPageFilterForm';\nimport FilterHandler from '../../FilterHandler';\nimport StorageHandler from '../../StorageHandler';\nimport messageServiceSingleton from '../../MessageService';\nimport userServiceSingleton from '../../UserService';\nimport './ingredient.css';\n\nconst storageHandler = new StorageHandler();\nconst filterHandler = new FilterHandler();\n\nexport default class ListPage extends Component {\n  /**\n   * ListPage constructor.\n   *\n   * @public\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      deleteRecipe: {},\n      recipes: [],\n      filteredRecipes: [],\n      filterValue: ''\n    };\n  }\n\n  /**\n   * Get recipes and set them to state.\n   *\n   * @public\n   */\n  componentDidMount = () => {\n    this.updateStateWithRecipes();\n  };\n\n  /**\n   * Show the modal.\n   *\n   * @param {Object} recipe\n   * @public\n   */\n  showModal = recipe => {\n    const state = Object.assign({}, this.state);\n    state.showModal = true;\n    state.deleteRecipe = recipe;\n    this.setState(state);\n  };\n\n  /**\n   * Hide the modal\n   *\n   * @public\n   */\n  hideModal = () => {\n    const state = Object.assign({}, this.state);\n    state.showModal = false;\n    this.setState(state);\n  };\n\n  /**\n   * Update state with new recipes.\n   *\n   * @public\n   */\n  updateStateWithRecipes = async () => {\n    const state = Object.assign({}, this.state);\n    const recipes = await storageHandler.getRecipes();\n\n    if (recipes && recipes.length > 0 && recipes[0] instanceof Recipe) {\n      state.recipes = recipes;\n      state.filteredRecipes = [...recipes];\n      await this.setState(state);\n    } else {\n      state.recipes = [];\n      state.filteredRecipes = [];\n      await this.setState(state);\n    }\n  };\n\n  /**\n   * Handle delete of a recipe.\n   *\n   * @public\n   */\n  handleDeleteRecipe = async () => {\n    const recipe = this.state.deleteRecipe;\n    const response = await storageHandler.deleteRecipeById(recipe.id);\n    if (response) {\n      messageServiceSingleton.setMessage(\n        messageServiceSingleton.getRecipeDeleteStatus(),\n        messageServiceSingleton.getRecipeDeleteMessage(recipe.name)\n      );\n    } else {\n      messageServiceSingleton.setMessage(\n        messageServiceSingleton.getRecipeDeleteFailStatus(),\n        messageServiceSingleton.getRecipeDeleteFailMessage(recipe.name)\n      );\n    }\n    const state = Object.assign({}, this.state);\n    state.showModal = false;\n\n    await this.setState(state);\n    this.updateStateWithRecipes();\n  };\n\n  /**\n   * Filter the recipes.\n   *\n   * @param {Object} event\n   * @public\n   */\n  filterList = event => {\n    const state = Object.assign({}, this.state);\n    state.filterValue = event.target.value;\n    this.setState(state);\n\n    // If there is no filter applied then we should revert\n    // the list to the original list of recipes.\n    if (event.target.value === '') {\n      this.setState({ filteredRecipes: this.state.recipes });\n      return;\n    }\n\n    // Start filtering with the unfiltered list of items\n    // so that every item is accounted for in the filtering.\n    const updatedList = filterHandler.filterItems(\n      this.state.recipes,\n      event.target.value\n    );\n\n    state.filteredRecipes = updatedList;\n\n    this.setState(state);\n  };\n\n  /**\n   * Clear the filtered value.\n   * \n   * @public\n   */\n  clearFilterValue = () => {\n    const state = Object.assign({}, this.state);\n    state.filterValue = '';\n    state.filteredRecipes = [...this.state.recipes];\n    this.setState(state);\n  }\n\n  /**\n   * Add a recipes scaler to the recipe. \n   * \n   * Ingredient amount manipulation is done in ListIngredient.\n   *\n   * @param {number} index\n   * @param {string} scaleType\n   * @param {number} scaleAmount\n   * @public\n   */\n  scaleRecipe = async (index, scaleType, scaleAmount) => {\n    const { filteredRecipes } = this.state;\n\n    filteredRecipes[index].scaled = {\n      type: scaleType,\n      amount: scaleAmount\n    };\n\n    this.setState({ filteredRecipes });\n  };\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <Page pageTitle=\"Recipes\">\n        <ListPageFilterForm\n          filterValue={this.state.filterValue}\n          recipes={this.state.filteredRecipes}\n          showModal={recipe => this.showModal(recipe)}\n          filterList={event => this.filterList(event)}\n          clearFilterValue={() => this.clearFilterValue()}\n          scaleRecipe={(index, scaleType, scaleAmount) =>\n            this.scaleRecipe(index, scaleType, scaleAmount)\n          }\n        />\n        {userServiceSingleton.isUserAdmin && (\n          <DeleteRecipeModal\n            showModal={this.state.showModal}\n            handleDeleteRecipe={() => this.handleDeleteRecipe()}\n            hideModal={() => this.hideModal()}\n            deleteRecipe={this.state.deleteRecipe}\n          />\n        )}\n      </Page>\n    );\n  }\n}\n","import React from 'react';\n\n/**\n * LoginPageContent component.\n *\n * @public\n */\nconst LoginPageContent = ({ githubId = '' }) => {\n  return (\n    <div className=\"login__container\">\n      <h3>If you wish to contribute recipes</h3>\n      <ol>\n        <li>Login with Github using the button below</li>\n        <li>\n          You will be presented with your Github ID, send this ID to{' '}\n          <a href=\"mailto:vincentjones4426@gmail.com\">\n            vincentjones4426@gmail.com\n          </a>\n          {' '} stating that you would like to have access to Add/Edit/Delete content on this site.\n        </li>\n        <li>\n          You will then be added to approved users and will be able to\n          Add/Edit/Delete content.\n        </li>\n      </ol>\n\n      {githubId !== '' && (\n        <div>\n          <h3>Github ID: {githubId}</h3>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LoginPageContent;\n","import React, { Component } from 'react';\nimport Page from '../Page';\nimport GitHubLogin from 'react-github-login';\nimport LoginPageContent from './LoginPageContent';\nimport AuthHandler from '../../AuthHandler';\nimport userServiceSingleton from '../../UserService';\nimport './LoginPage.css';\n\nconst authHandler = new AuthHandler();\n\nexport default class LoginPage extends Component {\n  /**\n   * Handle successful login\n   *\n   * @param {Object} response\n   * @public\n   */\n  onSuccess = async response => {\n    await userServiceSingleton.handleLoginSuccess(response);\n  };\n\n  /**\n   * Handle error login\n   *\n   * @param {Object} response\n   * @public\n   */\n  onFailure = response => console.error('error', response);\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <Page pageTitle=\"Login\">\n        <LoginPageContent githubId={userServiceSingleton.githubId} />\n        <div>\n          <GitHubLogin\n            clientId={userServiceSingleton.clientId}\n            onSuccess={this.onSuccess}\n            onFailure={this.onFailure}\n            redirectUri={authHandler.endpoints.redirectUri}\n            className=\"btn btn_secondary btn_login\"\n          />\n        </div>\n      </Page>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n * MenuItem component.\n */\nconst MenuItem = ({ menuClass, path, text }) => {\n  return <Link className={menuClass} to={path}>{text}</Link>\n};\n\nexport default MenuItem;\n","const Routes = () => {\n    return [\n      {\n        path: '/recipe/add',\n        text: 'Add a Recipe',\n        className: 'menu__item',\n        showWhenLoggedOut: false,\n        showWhenLoggedIn: true,\n      },\n      {\n        path: '/',\n        text: 'View Recipes',\n        className: 'menu__item',\n        showWhenLoggedOut: true,\n        showWhenLoggedIn: true,\n      },\n      {\n        path: '/login',\n        text: 'Login',\n        className: 'menu__item',\n        showWhenLoggedOut: true,\n        showWhenLoggedIn: false,\n      }\n    ];\n  };\n  \n  export default Routes();\n  ","import React from 'react';\nimport MenuItem from './MenuItem';\nimport Routes from '../../Routes';\nimport userServiceSingleton from '../UserService';\nimport Button from '../Button/Button';\nimport './menu.css';\n\nconst MainMenu = () => {\n  let routes = Routes;\n\n  if (userServiceSingleton.isUserAdmin) {\n    routes = routes.filter((route, index) => {\n      return route.showWhenLoggedIn;\n    });\n  } else {\n    routes = routes.filter((route, index) => {\n      return route.showWhenLoggedOut;\n    });\n  }\n\n  return (\n    <div>\n      {routes.map((route, index) => (\n        <MenuItem\n          key={index}\n          menuClass={route.className}\n          path={route.path}\n          text={route.text}\n        />\n      ))}\n      {userServiceSingleton.isUserAdmin && (\n        <Button\n          text=\"Logout\"\n          link=\"#\"\n          className=\"menu__item menu__item--secondary\"\n          isBtn={false}\n          onClick={() => userServiceSingleton.logout()}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MainMenu;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport FormPage from './components/Page/FormPage/FormPage';\nimport ListPage from './components/Page/ListPage/ListPage';\nimport LoginPage from './components/Page/Login/LoginPage';\nimport MainMenu from './components/Menu/MainMenu';\nimport userServiceSingleton from './components/UserService';\nimport messageServiceSingleton from './components/MessageService';\nimport './app.css';\nimport './form.css';\nimport './icon.css';\n\n/**\n * App component.\n * \n * @public\n */\nclass App extends Component {\n  /**\n   * App contructor.\n   *\n   * @public\n   */\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    // Set app state for user service.\n    userServiceSingleton.setAppComponent(this);\n\n    // Set app state for message service.\n    messageServiceSingleton.setAppComponent(this);\n  }\n\n  /**\n   * Handle componentDidMount actions.\n   *\n   * @public\n   */\n  componentDidMount = async () => {\n    userServiceSingleton.appSetup();\n    this.hasMounted = true;\n  };\n\n  /**\n   * Render App component.\n   *\n   * @public\n   */\n  render() {\n    // If the component hasn't mounted yet we need to wait so\n    // that we can handle user auth.\n    if (!this.hasMounted) {\n      return <div />;\n    }\n\n    return (\n      <Router>\n        <div>\n          <header className=\"header\">\n            <MainMenu userUtility={this.state.userUtility} />\n          </header>\n          <section className=\"body\">\n            <Switch>\n              <PrivatePropsRoute\n                exact\n                path=\"/recipe/add\"\n                component={FormPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n              <PropsRoute\n                exact\n                path=\"/\"\n                component={ListPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n              <PropsRoute\n                exact\n                path=\"/login\"\n                component={LoginPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n              <PropsRoute\n                exact\n                path=\"/recipe/edit/:recipeId\"\n                component={FormPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n            </Switch>\n          </section>\n        </div>\n      </Router>\n    );\n  }\n}\n\n/**\n * Render component with merged props.\n *\n * @param {Object} component\n * @param  {...any} props\n */\nconst renderMergedProps = (component, ...props) => {\n  const finalProps = Object.assign({}, ...props);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Add props to a route.\n *\n * @param {Object} Object\n * @param {Object} component\n * @param {...any} props\n */\nconst PropsRoute = ({ component, ...props }) => {\n  return (\n    <Route\n      {...props}\n      render={routeProps => {\n        return renderMergedProps(component, routeProps, props);\n      }}\n    />\n  );\n};\n\n/**\n * Add props to a private route.\n *\n * @param {Object} Object\n * @param {Object} component\n * @param {...any} props\n */\nconst PrivatePropsRoute = ({ component, ...props }) => {\n  return (\n    <Route\n      {...props}\n      render={routeProps => {\n        if (props.userUtility.isUserAdmin) {\n          return renderMergedProps(component, routeProps, props);\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
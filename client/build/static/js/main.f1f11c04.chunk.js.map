{"version":3,"sources":["models/Message.js","components/MessageService.js","components/Message/Message.js","components/Page/Page.js","models/Ingredient.js","models/Tag.js","models/Recipe.js","components/RecipeConfig.js","components/Button/Button.js","components/Form/IngredientForm.js","components/Form/IngredientFormContainer.js","components/Form/TagForm.js","components/Form/TagFormContainer.js","components/Form/RecipeForm.js","models/User.js","components/StorageHandler.js","components/Page/FormPage/FormPage.js","components/Modal/Modal.js","components/Modal/DeleteRecipeModal.js","components/Accordion/AccordionSection.js","components/Accordion/Accordion.js","components/Page/ListPage/ListIngredient.js","components/AuthHandler.js","components/UserService.js","components/Accordion/ListPageAccordion.js","components/Form/ListPageFilterForm.js","components/FilterHandler.js","components/Page/ListPage/ListPage.js","components/Page/Login/LoginPage.js","components/Menu/MenuItem.js","Routes.js","components/Menu/MainMenu.js","App.js","serviceWorker.js","index.js"],"names":["Message","_ref","_ref$status","status","_ref$text","text","_ref$shown","shown","Object","classCallCheck","this","WARNING","ERROR","SUCCESS","components_MessageService","appComponent","clearMessages","_callee","nextState","regenerator_default","a","wrap","_context","prev","next","_this","state","messageUtility","message","assign","setState","stop","setMessage","_callee2","_context2","console","log","toggleMessageShown","_callee3","_context3","undefined","statuses","getPostMessageStatus","saved","getSavedRecipeMessage","getRecipeNotFoundStatus","getRecipeNotFoundMessage","getRecipeUpdateStatus","getRecipeUpdateMessage","arguments","length","getRecipeDeleteStatus","getRecipeDeleteMessage","getRecipeDeleteFailStatus","getRecipeDeleteFailMessage","_this2","getMessage","props","getContainerClass","containerClass","concat","react_default","createElement","messageServiceSingleton","className","Component","Page","componentDidMount","componentWillUnmount","Message_Message_Message","pageTitle","children","Ingredient","ing","name","amount","measurementType","Tag","tag","id","Recipe","recipe","tranformIngredientData","ingData","ingredients","forEach","push","transformTagData","tagData","tags","description","RecipeConfig","value","rows","columns","Button","onClick","e","preventDefault","attributes","classes","attr","link","isBtn","objectSpread","recipeConfig","IngredientForm","handleFieldChange","event","inputElement","target","ingredient","onChange","type","measurementTypes","map","measurement","index","key","showDeleteButton","Button_Button","requestDeleteGroup","IngredientFormContainer","newIngValues","toConsumableArray","IngredientForm_IngredientForm","shouldShowDeleteButton","requestAddGroup","TagForm","requestDeleteTag","TagFormContainer","newTagValues","TagForm_TagForm","requestAddTag","RecipeForm","handleSubmit","onSubmit","handleRecipeFieldChange","textAreaConfig","cols","TagFormContainer_TagFormContainer","handleChildFieldChange","handleDeleteItemFromArray","handleAddTag","IngredientFormContainer_IngredientFormContainer","handleDeleteIngredientGroup","handleAddIngredientGroup","User","user","accessToken","clientId","StorageHandler","getUser","asyncToGenerator","mark","storageKey","userData","localStorage","getItem","sent","JSON","parse","abrupt","_x","apply","setUser","_ref2","setItem","stringify","_x2","_x3","removeUser","_ref3","_x4","postRecipe","_ref4","_callee4","data","json","headers","options","_context4","postHeaders","method","body","makeRequest","endpoints","postRecipes","then","responseJson","catch","error","_x5","putRecipe","_ref5","_callee5","_context5","updateRecipe","_x6","getRecipes","_callee6","_context6","responseData","recipes","recipeData","getRecipeById","_ref7","_callee7","endpoint","_context7","isEmpty","parsedData","_x7","obj","hasOwnProperty","deleteRecipeById","_ref8","_callee8","_context8","deleteRecipe","_x8","_ref9","_callee9","_args9","_context9","fetch","host","response","result","_x9","Headers","append","storageHandler","FormPage","possibleConstructorReturn","getPrototypeOf","call","getRecipeFromPath","setPageTitle","recipeId","match","params","parseInt","history","recipeFieldElement","field","newValuesCollection","filter","ingIdx","propName","item","itemIdx","res","bind","assertThisInitialized","Page_Page_Page","RecipeForm_RecipeForm","fieldName","Modal","getShowHideClassName","show","hideModal","DeleteRecipeModal","Modal_Modal_Modal","showModal","recipeName","handleDeleteRecipe","AccordionSection","label","isOpen","getArrowIcon","Accordion","_assertThisInitialize","allowMultipleOpen","openSections","defineProperty","child","Accordion_AccordionSection","defaultProps","ListIngredient","React","AuthHandler","getClientId","getAccessToken","code","isUserAdmin","_args4","redirectUri","authHandler","components_UserService","appSetup","setClientId","setUserIsAdmin","handleLoginSuccess","accessTokenResponse","logout","removeItem","userUtility","_args6","ListPageAccordion","components_Accordion_Accordion","ListIngredient_ListIngredient","userServiceSingleton","ListPageFilterForm","filterList","filterValue","placeholder","ListPageAccordion_ListPageAccordion","FilterHandler","items","search","haystack","needle","Array","i","String","toLowerCase","filterHandler","ListPage","updateStateWithRecipes","filteredRecipes","updatedList","filterItems","ListPageFilterForm_ListPageFilterForm","DeleteRecipeModal_DeleteRecipeModal","LoginPage","onSuccess","onFailure","GitHubLogin_default","MenuItem","path","react_router_dom","to","Routes","showWhenLoggedOut","showWhenLoggedIn","MainMenu","routes","route","Menu_MenuItem","menuClass","App","hasMounted","setAppComponent","components_Menu_MainMenu","react_router","App_PrivatePropsRoute","exact","component","App_PropsRoute","renderMergedProps","_len","_key","finalProps","PropsRoute","objectWithoutProperties","render","routeProps","PrivatePropsRoute","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1f11c04.chunk.js","sourcesContent":["/**\n * Message model.\n *\n * @public\n */\nexport default class Message {\n  /**\n   * Message constructor.\n   *\n   * @param {Object} Object\n   * @param {string} status\n   * @param {string} text\n   * @param {Boolean} shown\n   */\n  constructor({ status = '', text = '', shown = true }) {\n    this.status = status ? status : '';\n    this.text = text ? text : '';\n    this.shown = shown;\n  }\n}\n","import Message from '../models/Message';\n\nconst WARNING = 'warning';\nconst ERROR = 'error';\nconst SUCCESS = 'success';\n\n/**\n * MessageService.\n *\n * @public\n */\nclass MessageService {\n  /**\n   * Default value for appComponent.\n   */\n  appComponent = null;\n\n  /**\n   * Set the app component.\n   *\n   * @param {Object} appComponent\n   * @public\n   */\n  setAppComponent(appComponent) {\n    this.appComponent = appComponent;\n    this.appComponent.state.messageUtility = {\n      message: new Message({}),\n      getMessage: () => this.getMessage(),\n      clearMessages: () => this.clearMessages(),\n      setMessage: (status, text) => this.setMessage(status, text),\n      toggleMessageShown: () => this.toggleMessageShown()\n    };\n  }\n\n  /**\n   * Get the message properties\n   *\n   * @public\n   */\n  get message() {\n    if (this.appComponent.state.messageUtility !== undefined) {\n      return this.appComponent.state.messageUtility.message.props;\n    }\n\n    return new Message({});\n  }\n\n  /**\n   * Clear message.\n   *\n   * @public\n   */\n  clearMessages = async () => {\n    if (this.appComponent.state.messageUtility.message.shown) {\n      const nextState = Object.assign({}, this.appComponent.state);\n      nextState.messageUtility.message = new Message({});\n      await this.appComponent.setState(nextState);\n    }\n  };\n\n  /**\n   * Set message.\n   *\n   * @param {string} status\n   * @param {string} text\n   * @public\n   */\n  setMessage = async (status, text) => {\n    console.log('setMessage', status, text);\n    const nextState = Object.assign({}, this.appComponent.state);\n    nextState.messageUtility.message = new Message({ status, text });\n    this.appComponent.setState(nextState);\n  };\n\n  /**\n   * Toggle whether the message has been shown.\n   *\n   * @public\n   */\n  toggleMessageShown = async () => {\n    if (\n      this.appComponent.state.messageUtility !== undefined &&\n      this.appComponent.state.messageUtility.message.shown === false\n    ) {\n      console.log('toggling message');\n      const nextState = Object.assign({}, this.appComponent.state);\n      nextState.messageUtility.message.shown =\n        nextState.messageUtility.message.shown === true ? false : true;\n      this.appComponent.setState(nextState);\n    }\n  };\n\n\n  /**\n   * Available Statuses.\n   * \n   * @public\n   */\n  statuses = () => {\n    return {\n      WARNING: WARNING,\n      ERROR: ERROR,\n      SUCCESS: SUCCESS\n    }\n  }\n  \n  /**\n   * Get the message status after recipe POST has completed.\n   *\n   * @param {bool} saved\n   * @public\n   */\n  getPostMessageStatus = saved => {\n    console.log('getPostMessageStatus saved', saved);\n    return saved ? SUCCESS : ERROR;\n  };\n\n  /**\n   * Get the message after recipe POST has completed.\n   *\n   * @param {Boolean} saved\n   * @public\n   */\n  getSavedRecipeMessage = saved => {\n    return saved ? 'Recipe has been saved.' : 'Recipe has not been saved.';\n  };\n\n  /**\n   * Get the recipe not found status.\n   *\n   * @public\n   */\n  getRecipeNotFoundStatus = () => {\n    return WARNING;\n  }\n\n  /**\n   * Get recipe not found message.\n   * \n   * @public\n   */\n  getRecipeNotFoundMessage = () => {\n    return 'Recipe could not be found, try adding a new recipe';\n  }\n\n  /**\n   * Get the recipe not found status.\n   *\n   * @public\n   */\n  getRecipeUpdateStatus = () => {\n    return SUCCESS;\n  }\n\n  /**\n   * Get recipe not found message.\n   * \n   * @public\n   */\n  getRecipeUpdateMessage = (name = '') => {\n    return name + ' recipe has been updated.';\n  }\n\n  /**\n   * Get the recipe delete status.\n   *\n   * @public\n   */\n  getRecipeDeleteStatus = () => {\n    return SUCCESS;\n  }\n\n  /**\n   * Get recipe delete message.\n   * \n   * @public\n   */\n  getRecipeDeleteMessage = (name = '') => {\n    return name + ' recipe has been deleted.';\n  }\n\n  /**\n   * Get the recipe delete status.\n   *\n   * @public\n   */\n  getRecipeDeleteFailStatus = () => {\n    return ERROR;\n  }\n\n  /**\n   * Get recipe delete message.\n   * \n   * @public\n   */\n  getRecipeDeleteFailMessage = (name = '') => {\n    return name + ' recipe has not been deleted.';\n  }\n}\n\nexport default new MessageService();\n","import React, { Component } from 'react';\nimport messageServiceSingleton from '../MessageService';\nimport './Message.css';\n\n/**\n * Handle messages set in the header.\n */\nexport default class Message extends Component {\n  /**\n   * Get the container class based on the status.\n   *\n   * @param {string} status\n   * @public\n   */\n  getContainerClass = status => {\n    let containerClass = 'Message-container';\n\n    switch (status) {\n      case 'error':\n        containerClass = containerClass.concat(' Message-error');\n        break;\n      case 'success':\n        containerClass = containerClass.concat(' Message-success');\n        break;\n      case 'warning':\n        containerClass = containerClass.concat(' Message-warning');\n        break;\n      default:\n        return '';\n    }\n    return containerClass;\n  };\n\n  /**\n   * Render Message.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {messageServiceSingleton.message && (\n          <div\n            className={this.getContainerClass(\n              messageServiceSingleton.message.status\n            )}\n          >\n            <p className=\"Message-body\">\n              {messageServiceSingleton.message.text}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Message from '../Message/Message';\nimport PropTypes from 'prop-types';\nimport messageServiceSingleton from '../MessageService';\n\nimport './Page.css';\n\n/**\n * Page component.\n *\n * @public\n */\nexport default class Page extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Object).isRequired,\n    pageTitle: PropTypes.string.isRequired\n  };\n\n  /**\n   * Set message state.\n   *\n   * @public\n   */\n  componentDidMount = async () => {\n    messageServiceSingleton.toggleMessageShown();\n  };\n\n  /**\n   * Clear messages if they have been shown.\n   *\n   * @public\n   */\n  componentWillUnmount = async () => {\n    messageServiceSingleton.clearMessages();\n  };\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        <div>\n          <Message />\n        </div>\n        <div className=\"page container\">\n          <div>\n            <h1 className=\"Page-title\">{this.props.pageTitle}</h1>\n          </div>\n          <div>{this.props.children}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","/**\n * Ingredient model.\n */\nexport default class Ingredient {\n  /**\n   * Ingredient constructor.\n   *\n   * @param {Object} ing\n   */\n  constructor(ing = {}) {\n    this.name = ing.name ? ing.name : '';\n    this.amount = ing.amount ? ing.amount : '';\n    this.measurementType = ing.measurementType ? ing.measurementType : '';\n  }\n}\n","/**\n * Tag model.\n *\n * @public\n */\nexport default class Tag {\n  /**\n   * Tag constructor.\n   *\n   * @param {Object} tag\n   * @public\n   */\n  constructor(tag = {}) {\n    this.id = tag.id ? tag.id : '';\n    this.name = tag.name ? tag.name : '';\n  }\n}\n","import Ingredient from './Ingredient';\nimport Tag from './Tag';\n\n/**\n * Recipe model.\n *\n * @public\n */\nexport default class Recipe {\n  /**\n   * Recipe constructor.\n   *\n   * @param {Object} recipe\n   */\n  constructor(recipe = {}) {\n    this.id = recipe.id !== '' ? recipe.id : '';\n    this.name = recipe.name ? recipe.name : '';\n    this.description = recipe.description ? recipe.description : '';\n    this.ingredients = this.tranformIngredientData(recipe.ingredients);\n    this.tags = this.transformTagData(recipe.tags);\n  }\n\n  /**\n   * Transform ingredient data into array of Ingredients.\n   * \n   * @param {Object[]} ingData\n   * @public\n   */\n  tranformIngredientData = ingData => {\n    if (!ingData) {\n      return [new Ingredient()];\n    }\n\n    const ingredients = [];\n    ingData.forEach(ing => {\n      ingredients.push(new Ingredient(ing));\n    });\n\n    return ingredients;\n  }\n\n  /**\n   * Transform ingredient data into array of Ingredients.\n   * \n   * @param {Object[]} tagData\n   * @public\n   */\n  transformTagData = tagData => {\n    if (!tagData) {\n      return [new Tag()];\n    }\n\n    const tags = [];\n    tagData.forEach(tag => {\n      tags.push(new Tag(tag));\n    })\n\n    return tags;\n  }\n}\n","/**\n * Recipe configuration\n */\nexport default class RecipeConfig {\n\n    /**\n     * Get the ingredient measurement types.\n     */\n    get measurementTypes() {\n        return [\n            {\n                name: 'Each',\n                value: 'ea'\n            },\n            {\n                name: 'Pinch',\n                value: 'pinch'\n            },\n            {\n                name: 'Teaspoon(s)',\n                value: 'tsp'\n            },\n            {\n                name: 'Tablespoon(s)',\n                value: 'tbsp'\n            },\n            {\n                name: 'Cup(s)',\n                value: 'cp'\n            },\n            {\n                name: 'Quart(s)',\n                value: 'qt'\n            },\n            {\n                name: 'Gallon(s)',\n                value: 'gl'\n            },\n            {\n                name: 'Ounce(s)',\n                value: 'oz'\n            },\n            {\n                name: 'Pound(s)',\n                value: 'lbs'\n            },\n            {\n                name: 'Liter(s)',\n                value: 'lt'\n            },\n            {\n                name: 'Milliliter(s)',\n                value: 'ml'\n            },\n            {\n                name: 'Gram(s)',\n                value: 'gr'\n            },\n            {\n                name: 'Kilogram(s)',\n                value: 'kilo'\n            }\n        ];\n    };\n\n    /**\n     * Get textare configuration.\n     */\n    get textAreaConfig() {\n        return {\n            rows: '10',\n            columns: '30',\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Button component.\n * \n * @public\n */\nexport default class Button extends Component {\n  static propTypes = {\n    link: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    attr: PropTypes.objectOf(PropTypes.string),\n    isBtn: PropTypes.bool,\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n    preventDefault: PropTypes.bool\n  };\n\n  /**\n   * Get classes to apply to the button.\n   *\n   * @public\n   */\n  get className() {\n    let classes = 'btn';\n\n    if (\n      this.props.className !== undefined &&\n      this.props.className !== null &&\n      this.props.className !== ''\n    ) {\n      classes += ' ' + this.props.className;\n    }\n\n    return classes;\n  }\n\n  /**\n   * Get attributes to apply to the button.\n   * \n   * @public\n   */\n  get attributes() {\n    let attr = {};\n\n    attr['href'] = this.props.link;\n\n    if (this.props.isBtn) attr['role'] = 'button';\n    if (this.props.onClick) attr['onClick'] = this.onClick;\n    if (this.props.className) attr['className'] = this.props.className;\n\n    return {...attr, ...this.props.attr};\n  }\n\n  /**\n   * Handle click events and preventDefault when needed.\n   * \n   * @public\n   */\n  onClick = (e) => {\n    if (this.props.preventDefault) {\n      e.preventDefault();\n    }\n\n    this.props.onClick();\n  }\n\n  /**\n   * Render Button.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <a {...this.attributes}>\n        {this.props.text}\n      </a>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport RecipeConfig from '../RecipeConfig';\nimport Ingredient from '../../models/Ingredient';\n\nconst recipeConfig = new RecipeConfig();\n\n/**\n * IngredientForm component.\n *\n * @public\n */\nexport default class IngredientForm extends Component {\n  static propTypes = {\n    ingredient: PropTypes.instanceOf(Ingredient),\n    onChange: PropTypes.func.isRequired,\n    showDeleteButton: PropTypes.bool.isRequired,\n    requestDeleteGroup: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Handle recipe change events.\n   *\n   * @param {Object} event\n   * @public\n   */\n  handleFieldChange = () => event => {\n    const inputElement = event.target;\n    let ingredient = { ...this.props.ingredient };\n    ingredient[inputElement.name] = inputElement.value;\n    this.props.onChange(ingredient);\n  };\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className=\"Ingredient-group\">\n        <div className=\"Ingredient-field\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.props.ingredient.name}\n            onChange={this.handleFieldChange()}\n          />\n        </div>\n        <div className=\"Ingredient-field Ingredient-fieldInline\">\n          <label>Amount</label>\n          <input\n            className=\"Ingredient-amount\"\n            type=\"text\"\n            name=\"amount\"\n            value={this.props.ingredient.amount}\n            onChange={this.handleFieldChange()}\n          />\n        </div>\n        <div className=\"Ingredient-field Ingredient-fieldInline\">\n          <label>Measurement Type</label>\n          <select\n            name=\"measurementType\"\n            value={this.props.ingredient.measurementType}\n            onChange={this.handleFieldChange()}\n          >\n            {recipeConfig.measurementTypes.map((measurement, index) => (\n              <option value={measurement.value} key={index}>\n                {measurement.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"Ingredient-removeBtn\">\n          {this.props.showDeleteButton ? (\n            <Button\n              text=\"Remove Ingredient\"\n              link=\"#\"\n              className=\"btn btn_secondary\"\n              isBtn={true}\n              onClick={this.props.requestDeleteGroup}\n              preventDefault={true}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport IngredientForm from './IngredientForm';\nimport Button from '../Button/Button';\nimport Ingredient from '../../models/Ingredient';\n\n/**\n * IngredientFormContainer component.\n *\n * @public\n */\nexport default class IngredientFormContainer extends Component {\n  static propTypes = {\n    ingredients: PropTypes.arrayOf(PropTypes.instanceOf(Ingredient)),\n    onChange: PropTypes.func.isRequired,\n    requestDeleteGroup: PropTypes.func.isRequired,\n    requestAddGroup: PropTypes.func.isRequired\n  };\n\n  /**\n   * Get whether we should delete the the group.\n   */\n  get shouldShowDeleteButton() {\n    return this.props.ingredients.length > 1;\n  }\n\n  /**\n   * Handle ingredient change events.\n   *\n   * @param {number} index\n   * @param {Object} newIngValues\n   * @public\n   */\n  handleFieldChange = index => newIngValues => {\n    const ingredients = [...this.props.ingredients];\n    ingredients[index] = new Ingredient(newIngValues);\n    this.props.onChange(ingredients);\n  };\n\n  /**\n   * Render IngredientFormContainer.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        <h4>Ingredients</h4>\n        <div className=\"Ingredient-container\">\n          {this.props.ingredients.map((ingredient, index) => (\n            <IngredientForm\n              key={index}\n              ingredient={ingredient}\n              onChange={this.handleFieldChange(index)}\n              showDeleteButton={this.shouldShowDeleteButton}\n              requestDeleteGroup={() => this.props.requestDeleteGroup(index)}\n            />\n          ))}\n          <div className=\"Ingredient-addBtn\">\n            <Button\n              text=\"Add Ingredient\"\n              link='#'\n              className=\"btn btn_tertiary\"\n              isBtn={true}\n              onClick={this.props.requestAddGroup}\n              preventDefault={true}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tag from '../../models/Tag';\nimport Button from '../Button/Button';\n\n/**\n * TagForm component.\n *\n * @public\n */\nexport default class TagForm extends Component {\n  static propTypes = {\n    tag: PropTypes.instanceOf(Tag),\n    onChange: PropTypes.func.isRequired\n  };\n\n  /**\n   * Get the tag.\n   *\n   * @public\n   */\n  get tag() {\n    return this.props.tag;\n  }\n\n  /**\n   * Handle tag change events.\n   *\n   * @param {Object} event\n   * @public\n   */\n  handleFieldChange = () => event => {\n    const inputElement = event.target;\n    let tag = { ...this.props.tag };\n    tag[inputElement.name] = inputElement.value;\n    this.props.onChange(tag);\n  };\n\n  /**\n   * Render TagForm.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className=\"TagForm-container\">\n        <label className=\"isHidden\">Tag</label>\n        <input\n          className=\"TagForm-input\"\n          type=\"text\"\n          name=\"name\"\n          value={this.props.tag.name}\n          onChange={this.handleFieldChange()}\n        />\n        <Button\n          text=\"&times;\"\n          link=\"#\"\n          isBtn={false}\n          className=\"Tag-removeIcon\"\n          onClick={() => this.props.requestDeleteTag()}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tag from '../../models/Tag';\nimport TagForm from './TagForm';\nimport Button from '../Button/Button';\n\n/**\n * TagFormContainer component.\n *\n * @public\n */\nexport default class TagFormContainer extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    requestDeleteTag: PropTypes.func.isRequired,\n    tags: PropTypes.arrayOf(PropTypes.instanceOf(Tag)),\n  };\n\n  /**\n   * Handle tag change events.\n   *\n   * @param {number} index\n   * @param {Object} newTagValues\n   * @public\n   */\n  handleFieldChange = index => newTagValues => {\n    \n    const tags = [...this.props.tags];\n    tags[index] = new Tag(newTagValues);\n    this.props.onChange(tags);\n  };\n\n  /**\n   * Render TagFormContainer.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        <h4>Tags</h4>\n        {this.props.tags.map((tag, index) => (\n          <TagForm\n            key={index}\n            tag={tag}\n            index={index}\n            onChange={this.handleFieldChange(index)}\n            requestDeleteTag={() => this.props.requestDeleteTag(index)}\n          />\n        ))}\n        <div className=\"Tag-addBtn\">\n          <Button\n            text=\"Add Tag\"\n            link=\"#\"\n            className=\"btn btn_tertiary\"\n            isBtn={true}\n            onClick={this.props.requestAddTag}\n            preventDefault={true}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeConfig from '../RecipeConfig';\nimport IngredientFormContainer from './IngredientFormContainer';\nimport Recipe from '../../models/Recipe';\nimport TagFormContainer from './TagFormContainer';\n\nconst recipeConfig = new RecipeConfig();\n\n/**\n * RecipeForm component.\n *\n * @public\n */\nexport default class RecipeForm extends Component {\n  static propTypes = {\n    recipe: PropTypes.instanceOf(Recipe),\n    handleSubmit: PropTypes.func.isRequired,\n    handleRecipeFieldChange: PropTypes.func.isRequired,\n    handleChildFieldChange: PropTypes.func.isRequired,\n    handleDeleteIngredientGroup: PropTypes.func.isRequired,\n    handleAddIngredientGroup: PropTypes.func.isRequired\n  };\n\n  /**\n   * Handle form submit.\n   *\n   * @async\n   * @param {Object} event\n   * @public\n   */\n  handleSubmit = async event => {\n    this.props.handleSubmit(event);\n  };\n\n  /**\n   * Render RecipeForm.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <form className=\"Recipe-container\" onSubmit={this.props.handleSubmit}>\n        <div className=\"Recipe-field\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.props.recipe.name}\n            onChange={this.props.handleRecipeFieldChange()}\n          />\n        </div>\n        <div className=\"Recipe-field\">\n          <label>Description:</label>\n          <textarea\n            name=\"description\"\n            rows={recipeConfig.textAreaConfig.rows}\n            cols={recipeConfig.textAreaConfig.columns}\n            value={this.props.recipe.description}\n            onChange={this.props.handleRecipeFieldChange()}\n          />\n        </div>\n        <TagFormContainer\n          tags={this.props.recipe.tags}\n          onChange={this.props.handleChildFieldChange('tags')}\n          requestDeleteTag={index => this.props.handleDeleteItemFromArray(index, 'tags')}\n          requestAddTag={() => this.props.handleAddTag()}\n        />\n        <IngredientFormContainer\n          ingredients={this.props.recipe.ingredients}\n          onChange={this.props.handleChildFieldChange('ingredients')}\n          requestDeleteGroup={index =>\n            this.props.handleDeleteIngredientGroup(index)\n          }\n          requestAddGroup={this.props.handleAddIngredientGroup}\n        />\n        <div>\n          <input className=\"btn btn_primary\" type=\"submit\" value=\"Submit\" />\n        </div>\n      </form>\n    );\n  }\n}\n","/**\n * User model.\n *\n * @public\n */\nexport default class User {\n    /**\n     * User constructor.\n     *\n     * @param {Object} User\n     * @public\n     */\n    constructor(user = {}) {\n      this.accessToken = user.accessToken ? user.accessToken : '';\n      this.clientId = user.clientId ? user.clientId : '';\n    }\n  }\n  ","import Recipe from '../models/Recipe';\nimport User from '../models/User';\n\n/**\n * Handle storage of data.\n */\nexport default class StorageHandler {\n  /**\n   * StorageHandler constructor.\n   *\n   * @public\n   */\n  constructor() {\n    this.endpoints = {\n      host: 'http://vincentjonesmuth.com:5000',\n      postRecipes: '/recipes/post',\n      updateRecipe: '/recipes/update',\n      deleteRecipe: '/recipes/delete',\n      getRecipes: '/recipes/get'\n    };\n  }\n\n  /**\n   * Get user from local storage.\n   *\n   * @param {string} storageKey\n   * @public\n   */\n  getUser = async storageKey => {\n    let user = await localStorage.getItem(storageKey);\n    let userData = {};\n\n    if (user) {\n      userData = JSON.parse(user);\n    }\n\n    return new User(userData);\n  };\n\n  /**\n   * Set user to local storage.\n   *\n   * @param {User} user\n   * @param {string} storageKey\n   * @public\n   */\n  setUser = async (user, storageKey) => {\n    await localStorage.setItem(storageKey, JSON.stringify(user));\n  };\n\n  removeUser = async (storageKey) => {\n    \n  }\n\n  /**\n   * Get headers to send a POST request.\n   *\n   * @public\n   */\n  get postHeaders() {\n    const headers = new Headers();\n    headers.append('Content-type', 'application/json');\n    headers.append('Accept', 'application/json');\n    return headers;\n  }\n\n  /**\n   * Write the data to a storage.\n   *\n   * @param {data}\n   * @public\n   */\n  postRecipe = async data => {\n    const json = JSON.stringify(data);\n    const headers = this.postHeaders;\n\n    const options = {\n      method: 'POST',\n      headers,\n      body: json\n    };\n\n    return await this.makeRequest(this.endpoints.postRecipes, options)\n      .then(responseJson => {\n        return responseJson;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Write the data to a storage.\n   *\n   * @param {data}\n   * @public\n   */\n  putRecipe = async data => {\n    const json = JSON.stringify(data);\n    const headers = this.postHeaders;\n\n    const options = {\n      method: 'PUT',\n      headers,\n      body: json\n    };\n\n    return await this.makeRequest(this.endpoints.updateRecipe, options)\n      .then(responseJson => {\n        return responseJson;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Get the recipes from storage.\n   *\n   * @public\n   */\n  getRecipes = async () => {\n    return this.makeRequest(this.endpoints.getRecipes)\n      .then(responseJson => {\n        const responseData = JSON.parse(responseJson.data);\n        const recipes = [];\n\n        responseData.data.forEach(recipeData => {\n          recipes.push(new Recipe(recipeData));\n        });\n\n        return recipes;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Get recipe by ID.\n   *\n   * @param {number} id\n   * @public\n   */\n  getRecipeById = async id => {\n    const endpoint = this.endpoints.getRecipes + '/' + id;\n\n    return await this.makeRequest(endpoint)\n      .then(responseJson => {\n        if (this.isEmpty(responseJson.data)) {\n          return undefined;\n        }\n        const parsedData = JSON.parse(responseJson.data);\n\n        if (parsedData !== undefined) {\n          return new Recipe(parsedData);\n        }\n\n        return undefined;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Check if an object is empty.\n   *\n   * @param {Object} obj\n   * @public\n   */\n  isEmpty = obj => {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n    return true;\n  };\n\n  /**\n   * Delete recipe by ID.\n   *\n   * @param {number} id\n   * @public\n   */\n  deleteRecipeById = async id => {\n    const endpoint = this.endpoints.deleteRecipe + '/' + id;\n\n    const options = {\n      method: 'DELETE'\n    };\n\n    return await this.makeRequest(endpoint, options)\n      .then(responseJson => {\n        const responseData = JSON.parse(responseJson.data);\n        return responseData;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Make a request.\n   *\n   * @param {endpoint}\n   * @param {options}\n   * @public\n   */\n  makeRequest = async (endpoint, options = {}) => {\n    return fetch(this.endpoints.host + endpoint, options)\n      .then(response => response.json())\n      .then(result => {\n        return result;\n      })\n      .catch(error => {\n        console.log('error', error);\n        return error;\n      });\n  };\n}\n","import React, { Component } from 'react';\nimport Page from '../Page';\nimport Recipe from '../../../models/Recipe';\nimport Ingredient from '../../../models/Ingredient';\nimport Tag from '../../../models/Tag';\nimport RecipeForm from '../../Form/RecipeForm';\nimport StorageHandler from '../../StorageHandler';\nimport messageServiceSingleton from '../../MessageService';\nimport './FormPage.css';\n\nconst storageHandler = new StorageHandler();\n\n/**\n * FormPage component.\n *\n * @public\n */\nexport default class FormPage extends Component {\n  /**\n   * FormPage constructor.\n   *\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipe: new Recipe(),\n      pageTitle: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /**\n   * Get recipe for editing\n   *\n   * @public\n   */\n  componentDidMount = async () => {\n    await this.getRecipeFromPath();\n    this.setPageTitle();\n  };\n\n  /**\n   * Set the page title based on initial state.\n   *\n   * @public\n   */\n  setPageTitle = () => {\n    const state = { ...this.state };\n\n    if (this.state.recipe.name !== '' && this.state.recipe.id !== '') {\n      state.pageTitle = 'Edit ' + this.state.recipe.name + ' recipe';\n    } else {\n      state.pageTitle = 'Add a Recipe';\n    }\n\n    this.setState(state);\n  };\n\n  /**\n   * Get recipe from path for editing.\n   *\n   * @public\n   */\n  getRecipeFromPath = async () => {\n    if (!this.props.match.params.hasOwnProperty('recipeId')) {\n      return;\n    }\n\n    const recipeId = parseInt(this.props.match.params.recipeId);\n    await storageHandler.getRecipeById(recipeId).then(recipe => {\n      if (recipe instanceof Recipe) {\n        this.setState({ recipe: recipe });\n      } else {\n        messageServiceSingleton.setMessage(\n          messageServiceSingleton.getRecipeNotFoundStatus(),\n          messageServiceSingleton.getRecipeNotFoundMessage()\n        );\n        this.props.history.push('/recipe/add');\n      }\n    });\n  };\n\n  /**\n   * Handle top level field changes.\n   *\n   * @param {Object} event\n   * @public\n   */\n  handleRecipeFieldChange = () => event => {\n    const recipeFieldElement = event.target;\n    const recipe = this.state.recipe;\n    recipe[recipeFieldElement.name] = recipeFieldElement.value;\n    this.setState({\n      recipe: recipe\n    });\n  };\n\n  /**\n   * Handle child field changes.\n   *\n   * @param {string} field\n   * @param {Object} newValuesCollection\n   * @public\n   */\n  handleChildFieldChange = field => newValuesCollection => {\n    const state = { ...this.state };\n    state.recipe[field] = newValuesCollection;\n    this.setState(state);\n  };\n\n  /**\n   * Add an ingredient group.\n   *\n   * @public\n   */\n  handleAddIngredientGroup = () => {\n    const recipe = this.state.recipe;\n    recipe.ingredients = recipe.ingredients.concat([new Ingredient()]);\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Add a tag.\n   *\n   * @public\n   */\n  handleAddTag = () => {\n    const recipe = this.state.recipe;\n    recipe.tags = recipe.tags.concat([new Tag()]);\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Remove an ingredient group.\n   *\n   * @param {number} index\n   * @public\n   */\n  handleDeleteIngredientGroup = index => {\n    const recipe = this.state.recipe;\n    recipe.ingredients = recipe.ingredients.filter(\n      (ing, ingIdx) => index !== ingIdx\n    );\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Remove an item from array.\n   *\n   * @param {number} index\n   * @public\n   */\n  handleDeleteItemFromArray = (index, propName) => {\n    console.log(index, propName);\n    const recipe = this.state.recipe;\n    recipe[propName] = recipe[propName].filter(\n      (item, itemIdx) => index !== itemIdx\n    );\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Handle form submit.\n   *\n   * @async\n   * @param {Object} event\n   * @public\n   */\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    if (\n      this.state.recipe.hasOwnProperty('id') &&\n      this.state.recipe.id !== '' &&\n      this.state.recipe.id !== undefined\n    ) {\n      // Handle update recipe.\n      await storageHandler.putRecipe(this.state.recipe).then(res => {\n        messageServiceSingleton.setMessage(\n          messageServiceSingleton.getRecipeUpdateStatus(res.data),\n          messageServiceSingleton.getRecipeUpdateMessage(this.state.recipe.name)\n        );\n        return res;\n      });\n    } else {\n      // Handle save new recipe.\n      await storageHandler.postRecipe(this.state.recipe).then(res => {\n        messageServiceSingleton.setMessage(\n          messageServiceSingleton.getPostMessageStatus(res.data),\n          messageServiceSingleton.getSavedRecipeMessage(res.data)\n        );\n        return res;\n      });\n    }\n\n    this.props.history.push('/');\n  };\n\n  /**\n   * Render FormPage.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <Page pageTitle={this.state.pageTitle}>\n        <RecipeForm\n          recipe={this.state.recipe}\n          handleSubmit={event => this.handleSubmit(event)}\n          handleRecipeFieldChange={() => this.handleRecipeFieldChange()}\n          handleChildFieldChange={fieldName =>\n            this.handleChildFieldChange(fieldName)\n          }\n          handleDeleteIngredientGroup={index =>\n            this.handleDeleteIngredientGroup(index)\n          }\n          handleDeleteItemFromArray={(index, propName) => {\n            this.handleDeleteItemFromArray(index, propName);\n          }}\n          handleAddIngredientGroup={() => this.handleAddIngredientGroup()}\n          handleAddTag={() => this.handleAddTag()}\n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\n\nimport './Modal.css';\n\n/**\n * DeleteModal component.\n *\n * @public\n */\nexport default class Modal extends Component {\n  static propTypes = {\n    show: PropTypes.bool.isRequired,\n    hideModal: PropTypes.func.isRequired,\n    children: PropTypes.instanceOf(Object).isRequired,\n  };\n\n  /**\n   * Get the show hide class name.\n   *\n   * @param {Boolean} show\n   * @public\n   */\n  getShowHideClassName = show => {\n    return show ? 'Modal Modal-display' : 'Modal Modal-hide';\n  };\n\n  /**\n   * Render the modal.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className={this.getShowHideClassName(this.props.show)}>\n        <section className=\"Modal-main\">\n          {this.props.children}\n          <div className=\"Modal-btnCloseContainer\">\n            <Button\n              text=\"Close\"\n              link=\"#\"\n              className=\"btn btn_tertiary btn_modalClose\"\n              isBtn={true}\n              onClick={() => this.props.hideModal()}\n            />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport Button from '../Button/Button';\n\n/**\n * DeleteRecipeModal component.\n *\n * @public\n */\nexport default class DeleteRecipeModal extends Component {\n  static propTypes = {\n    showModal: PropTypes.bool.isRequired,\n    hideModal: PropTypes.func.isRequired,\n    handleDeleteRecipe: PropTypes.func.isRequired,\n    deleteRecipe: PropTypes.instanceOf(Object).isRequired\n  };\n\n  /**\n   * Get the name of the recipe to delete.\n   *\n   * @public\n   */\n  get recipeName() {\n    if (\n      this.props.deleteRecipe.hasOwnProperty('name') &&\n      this.props.deleteRecipe.name !== undefined &&\n      this.props.deleteRecipe.name !== null &&\n      this.props.deleteRecipe.name !== ''\n    ) {\n      return this.props.deleteRecipe.name;\n    }\n\n    return 'this';\n  }\n  render() {\n    return (\n      <Modal show={this.props.showModal} hideModal={this.props.hideModal}>\n        <div className=\"ListRecipe-deleteModal\">\n          <h3>Are you sure you would like delete {this.recipeName} recipe?</h3>\n          <div className=\"ListRecipe-buttonGroup\">\n            <Button\n              text=\"Yes\"\n              link=\"#\"\n              className=\"btn btn_secondary\"\n              isBtn={true}\n              onClick={() => this.props.handleDeleteRecipe()}\n            />\n            <Button\n              text=\"No\"\n              link=\"#\"\n              className=\"btn btn_primary\"\n              isBtn={true}\n              onClick={() => this.props.hideModal()}\n            />\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * AccordionSection component.\n *\n * @public\n */\nclass AccordionSection extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Object).isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  };\n\n  /**\n   * Get arrow used for accordion section.\n   *\n   * @param {isOpen}\n   */\n  getArrowIcon(isOpen) {\n    if (isOpen) return <span>&#9660;</span>;\n\n    return <span>&#9650;</span>;\n  }\n\n  /**\n   * Get the container class to specify if the accordion is open or not.\n   *\n   * @public\n   */\n  getContainerClass() {\n    if (this.props.isOpen) return 'Accordion-container Accordion-selected';\n\n    return 'Accordion-container';\n  }\n\n  /**\n   * Handle open and closing the accordion.\n   *\n   * @public\n   */\n  onClick = event => {\n    this.props.onClick(this.props.label, event);\n  };\n\n  /**\n   * Render AccordionSection.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className={this.getContainerClass()}>\n        <div className=\"Accordion-details\" onClick={this.onClick}>\n          <div>\n            <h3 className=\"Accordion-title\">{this.props.label}</h3>\n            <span className=\"Accordion-icon\">\n              {this.getArrowIcon(this.props.isOpen)}\n            </span>\n          </div>\n\n          {this.props.isOpen && (\n            <div>\n              <hr />\n              <p>{this.props.description}</p>\n              <div className=\"Accordion-inner\">{this.props.children}</div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AccordionSection;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AccordionSection from './AccordionSection';\n\nimport './Accordion.css';\n\n/**\n * Accordion component.\n * \n * @public\n */\nclass Accordion extends Component {\n  static propTypes = {\n    allowMultipleOpen: PropTypes.bool,\n    children: PropTypes.instanceOf(Object).isRequired\n  };\n\n  static defaultProps = {\n    allowMultipleOpen: false\n  };\n\n  /**\n   * Accordion constructor.\n   *\n   * @param {Object} props\n   */\n  constructor(props) {\n    super(props);\n\n    const openSections = {};\n\n    this.props.children.forEach((child, index) => {\n      if (child.props.isOpen) {\n        openSections[child.props.label] = true;\n      } else {\n      }\n    });\n\n    this.state = { openSections };\n  }\n\n  /**\n   * Handle opening and closing accordions.\n   *\n   * @param {string} label\n   * @public\n   */\n  onClick = label => {\n    const {\n      props: { allowMultipleOpen },\n      state: { openSections }\n    } = this;\n\n    const isOpen = !!openSections[label];\n\n    if (allowMultipleOpen) {\n      this.setState({\n        openSections: {\n          ...openSections,\n          [label]: !isOpen\n        }\n      });\n    } else {\n      this.setState({\n        openSections: {\n          [label]: !isOpen\n        }\n      });\n    }\n  };\n\n  /**\n   * Render Accordion.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <li>\n        {this.props.children.map((child, index) => (\n          <AccordionSection\n            key={index}\n            isOpen={!!this.state.openSections[child.props.label]}\n            label={child.props.label}\n            description={child.props.description}\n            onClick={this.onClick}\n          >\n            {child.props.children}\n          </AccordionSection>\n        ))}\n      </li>\n    );\n  }\n}\n\nexport default Accordion;\n","import React from 'react';\n\nexport default class ListIngredient extends React.Component {\n  render() {\n    return (\n      <li>\n        <h3>\n          {this.props.ingredient.amount} {this.props.ingredient.measurementType} - {this.props.ingredient.name}\n        </h3>\n        <div />\n      </li>\n    );\n  }\n}\n","/**\n * AuthHandler service.\n *\n * @public\n */\nexport default class AuthHandler {\n  /**\n   * StorageHandler constructor.\n   *\n   * @public\n   */\n  constructor() {\n    this.endpoints = {\n      host: 'http://vincentjonesmuth.com:5000',\n      redirectUri: 'http://vincentjonesmuth.com/login',\n      accessToken: '/auth/login',\n      clientId: '/auth/get/client_id',\n      isUserAdmin: '/auth/get/isUserAdmin'\n    };\n  }\n\n  /**\n   * Get the client_id from the server.\n   *\n   * @public\n   */\n  getClientId = async () => {\n    const response = await this.makeRequest(this.endpoints.clientId);\n\n    if (!response.hasOwnProperty('data')) {\n      return '';\n    }\n\n    return response.data;\n  };\n\n  /**\n   * Get the access github access token\n   *\n   * @param {string} code\n   * @public\n   */\n  getAccessToken = async code => {\n    const endpoint = this.endpoints.accessToken + '/' + code;\n    const response = await this.makeRequest(endpoint);\n\n    if (!response.hasOwnProperty('data')) {\n      return '';\n    }\n\n    return response;\n  };\n\n  /**\n   * Find out whether the user that loggec in is admin.\n   *\n   * @param {User} user\n   * @public\n   */\n  isUserAdmin = async user => {\n    if (!user.hasOwnProperty('accessToken') || user.accessToken === '') {\n      return false;\n    }\n\n    const endpoint = this.endpoints.isUserAdmin + '/' + user.accessToken;\n    const response = await this.makeRequest(endpoint);\n    return response.user;\n  };\n\n  /**\n   * Make a request.\n   *\n   * @param {endpoint}\n   * @param {options}\n   * @public\n   */\n  makeRequest = async (endpoint, options = {}) => {\n    return fetch(this.endpoints.host + endpoint, options)\n      .then(response => response.json())\n      .then(result => {\n        return result;\n      })\n      .catch(error => {\n        console.log('error', error);\n        return error;\n      });\n  };\n}\n","import AuthHandler from './AuthHandler';\nimport StorageHandler from './StorageHandler';\nimport User from '../models/User';\n\nconst authHandler = new AuthHandler();\nconst storageHandler = new StorageHandler();\n\n/**\n * UserService.\n *\n * @public\n */\nclass UserService {\n  /**\n   * Default value for appComponent.\n   */\n  appComponent = null;\n\n  /**\n   * Set the app component.\n   *\n   * @param {Object} appComponent\n   * @public\n   */\n  setAppComponent(appComponent) {\n    this.appComponent = appComponent;\n    this.appComponent.state.userUtility = {\n      user: new User(),\n      storageKey: 'recipeAppUser',\n      isUserAdmin: false\n    };\n  }\n\n  /**\n   * Get the client id.\n   *\n   * @public\n   */\n  get clientId() {\n    return this.appComponent.state.userUtility.user.clientId;\n  }\n\n  /**\n   * Get whether the user is admin.\n   *\n   * @public\n   */\n  get isUserAdmin() {\n    return this.appComponent.state.userUtility.isUserAdmin;\n  }\n\n  /**\n   * AppComponent setup\n   *\n   * @public\n   */\n  appSetup = async () => {\n    await this.getUser();\n    await this.setClientId();\n    await this.setUserIsAdmin();\n  };\n\n  /**\n   * Handle successful login.\n   *\n   * @param {Object} response\n   * @public\n   */\n  handleLoginSuccess = async response => {\n    let accessToken = '';\n    const accessTokenResponse = await authHandler.getAccessToken(response.code);\n\n    if (accessTokenResponse.hasOwnProperty('data')) {\n      accessToken = accessTokenResponse.data;\n    }\n\n    await this.setUser(accessToken);\n    await this.setUserIsAdmin();\n  };\n\n  logout = async () => {\n    await localStorage.removeItem(\n      this.appComponent.state.userUtility.storageKey\n    );\n    const nextState = Object.assign({}, this.appComponent.state);\n\n    nextState.userUtility.user = new User({\n      accessToken: '',\n      clientId: this.clientId\n    });\n    nextState.userUtility.isUserAdmin = false;\n\n    await this.appComponent.setState(nextState);\n  };\n\n  /**\n   * Get the client id.\n   *\n   * @public\n   */\n  setClientId = async () => {\n    if (this.appComponent.state.userUtility.user.clientId !== '') {\n      return;\n    }\n\n    const nextState = Object.assign({}, this.appComponent.state);\n    nextState.userUtility.user.clientId = await authHandler.getClientId();\n    this.appComponent.setState(nextState);\n  };\n\n  /**\n   * Get the user from local storage if it exists.\n   *\n   * @public\n   */\n  getUser = async () => {\n    const nextState = Object.assign({}, this.appComponent.state);\n    nextState.userUtility.user = await storageHandler.getUser(\n      this.appComponent.state.userUtility.storageKey\n    );\n    this.appComponent.setState(nextState);\n  };\n\n  /**\n   * Set the user information using the accesstoken.\n   *\n   * @param {string} accessToken\n   * @public\n   */\n  setUser = async (accessToken = '') => {\n    const nextState = Object.assign({}, this.appComponent.state);\n    nextState.userUtility.user.accessToken = accessToken;\n\n    storageHandler.setUser(\n      nextState.userUtility.user,\n      nextState.userUtility.storageKey\n    );\n\n    this.appComponent.setState(nextState);\n  };\n\n  /**\n   * Get whether a user is admin.\n   *\n   * @public\n   */\n  setUserIsAdmin = async () => {\n    const isUserAdmin = await authHandler.isUserAdmin(\n      this.appComponent.state.userUtility.user\n    );\n    const nextState = Object.assign({}, this.appComponent.state);\n    nextState.userUtility.isUserAdmin = isUserAdmin;\n    this.appComponent.setState(nextState);\n  };\n}\n\nexport default new UserService();\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Accordion from './Accordion';\nimport ListIngredient from '../Page/ListPage/ListIngredient';\nimport Button from '../Button/Button';\nimport Recipe from '../../models/Recipe';\nimport userServiceSingleton from '../UserService';\n\n/**\n * ListPageAccordion component.\n *\n * @public\n */\nexport default class ListPageAccordion extends Component {\n  static propTypes = {\n    showModal: PropTypes.func.isRequired,\n    recipes: PropTypes.arrayOf(PropTypes.instanceOf(Recipe)).isRequired\n  };\n\n  /**\n   * Render ListPageAccordion.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <ul className=\"ListRecipe-container\">\n        <Accordion allowMultipleOpen>\n          {this.props.recipes.map((recipe, index) => (\n            <div\n              key={index}\n              label={recipe.name}\n              description={recipe.description}\n            >\n              <ul>\n                <h4>Ingredients</h4>\n                {recipe.ingredients.map((ingredient, index) => (\n                  <ListIngredient key={index} ingredient={ingredient} />\n                ))}\n              </ul>\n              {userServiceSingleton.isUserAdmin && (\n                <div>\n                  <Button\n                    text=\"Edit recipe\"\n                    link={'recipe/edit/' + recipe.id}\n                    className=\"btn btn_tertiary\"\n                    isBtn={true}\n                  />\n                  <Button\n                    text=\"Delete recipe\"\n                    link=\"#\"\n                    className=\"btn btn_secondary\"\n                    isBtn={true}\n                    onClick={() => this.props.showModal(recipe)}\n                  />\n                </div>\n              )}\n            </div>\n          ))}\n        </Accordion>\n      </ul>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ListPageAccordion from '../Accordion/ListPageAccordion';\nimport Recipe from '../../models/Recipe';\n\n/**\n * ListPageFilterForm component.\n *\n * @public\n */\nexport default class ListPageFilterForm extends Component {\n  static propTypes = {\n    showModal: PropTypes.func.isRequired,\n    filterList: PropTypes.func.isRequired,\n    recipes: PropTypes.arrayOf(PropTypes.instanceOf(Recipe))\n  };\n\n  /**\n   * Handle the filtering of the list.\n   * \n   * @param {Object} event\n   * @public\n   */\n  filterList = event => {\n    this.props.filterList(event);\n  };\n\n  /**\n   * Render ListPageFilterForm\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className=\"ListPage-container\">\n        <form>\n          <fieldset>\n            <input\n              type=\"text\"\n              name=\"filterInput\"\n              value={this.props.filterValue}\n              className=\"ListPage-filterInput\"\n              placeholder=\"Search by Recipe name, Ingredient name, or Tag name\"\n              onChange={this.filterList}\n            />\n          </fieldset>\n        </form>\n        <ListPageAccordion\n          recipes={this.props.recipes}\n          showModal={recipe => this.props.showModal(recipe)}\n        />\n      </div>\n    );\n  }\n}\n","/**\n * FilterHandler\n *\n * Handle live filtering.\n */\nexport default class FilterHandler {\n  /**\n   * Filter a array by filter value.\n   *\n   * @param {Object[]} items\n   * @param {string}} filterValue\n   */\n  filterItems(items, filterValue) {\n    items = items.filter(item => {\n      return this.search(item, filterValue);\n    });\n\n    return items;\n  }\n\n  /**\n   * Search for a match recursively.\n   *\n   * @param {*} haystack\n   * @param {string} string\n   * @public\n   */\n  search(haystack, needle) {\n    if (haystack instanceof Array) {\n      for (let i = 0; i < haystack.length; i++) {\n        if (this.search(haystack[i], needle)) {\n          return true;\n        }\n      }\n    } else if (typeof haystack === 'object') {\n      for (const key in haystack) {\n        if (this.search(haystack[key], needle)) {\n          return true;\n        }\n      }\n    } else {\n      return (\n        String(haystack)\n          .toLowerCase()\n          .search(needle.toLowerCase()) !== -1\n      );\n    }\n\n    return false;\n  }\n}\n","import React, { Component } from 'react';\nimport Page from '../Page';\nimport Recipe from '../../../models/Recipe';\nimport DeleteRecipeModal from '../../Modal/DeleteRecipeModal';\nimport ListPageFilterForm from '../../Form/ListPageFilterForm';\nimport FilterHandler from '../../FilterHandler';\nimport StorageHandler from '../../StorageHandler';\nimport messageServiceSingleton from '../../MessageService';\nimport userServiceSingleton from '../../UserService';\nimport './ListPage.css';\n\nconst storageHandler = new StorageHandler();\nconst filterHandler = new FilterHandler();\n\nexport default class ListPage extends Component {\n  /**\n   * ListPage constructor.\n   *\n   * @public\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      deleteRecipe: {},\n      recipes: [],\n      filteredRecipes: [],\n      filterValue: ''\n    };\n  }\n\n  /**\n   * Get recipes and set them to state.\n   *\n   * @public\n   */\n  componentDidMount = () => {\n    this.updateStateWithRecipes();\n  };\n\n  /**\n   * Show the modal.\n   *\n   * @param {Object} recipe\n   * @public\n   */\n  showModal = recipe => {\n    this.setState({ showModal: true, deleteRecipe: recipe });\n  };\n\n  /**\n   * Hide the modal\n   *\n   * @public\n   */\n  hideModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  /**\n   * Update state with new recipes.\n   *\n   * @public\n   */\n  updateStateWithRecipes = () => {\n    storageHandler.getRecipes().then(recipes => {\n      if (recipes && recipes.length > 0 && recipes[0] instanceof Recipe) {\n        this.setState({ recipes: recipes, filteredRecipes: recipes });\n      } else {\n        this.setState({ recipes: [], filteredRecipes: [] });\n      }\n    });\n  };\n\n  /**\n   * Handle delete of a recipe.\n   *\n   * @public\n   */\n  handleDeleteRecipe = () => {\n    const recipe = this.state.deleteRecipe;\n    storageHandler.deleteRecipeById(recipe.id).then(res => {\n      if (res) {\n        messageServiceSingleton.setMessage(\n          messageServiceSingleton.getRecipeDeleteStatus(),\n          messageServiceSingleton.getRecipeDeleteMessage(recipe.name)\n        );\n      } else {\n        messageServiceSingleton.setMessage(\n          messageServiceSingleton.getRecipeDeleteFailStatus(),\n          messageServiceSingleton.getRecipeDeleteFailMessage(recipe.name)\n        );\n      }\n\n      this.setState({ showModal: false });\n      this.updateStateWithRecipes();\n    });\n  };\n\n  /**\n   * Filter the recipes.\n   *\n   * @param {Object} event\n   * @public\n   */\n  filterList = event => {\n    const state = this.state;\n    state.filterValue = event.target.value;\n    this.setState(state);\n\n    // If there is no filter applied then we should revert\n    // the list to the original list of recipes.\n    if (event.target.value === '') {\n      this.setState({ filteredRecipes: this.state.recipes });\n      return;\n    }\n\n    // Start filtering with the unfiltered list of items\n    // so that every item is accounted for in the filtering.\n    const updatedList = filterHandler.filterItems(\n      this.state.recipes,\n      event.target.value\n    );\n\n    this.setState({ filteredRecipes: updatedList });\n  };\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <Page pageTitle=\"Recipes\">\n        <ListPageFilterForm\n          filterValue={this.state.filterValue}\n          recipes={this.state.filteredRecipes}\n          showModal={recipe => this.showModal(recipe)}\n          filterList={event => this.filterList(event)}\n        />\n        {userServiceSingleton.isUserAdmin && (\n          <DeleteRecipeModal\n            showModal={this.state.showModal}\n            handleDeleteRecipe={() => this.handleDeleteRecipe()}\n            hideModal={() => this.hideModal()}\n            deleteRecipe={this.state.deleteRecipe}\n          />\n        )}\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Page from '../Page';\nimport GitHubLogin from 'react-github-login';\nimport AuthHandler from '../../AuthHandler';\nimport userServiceSingleton from '../../UserService';\n\nconst authHandler = new AuthHandler();\n\nexport default class LoginPage extends Component {\n  /**\n   * Handle successful login\n   *\n   * @param {Object} response\n   * @public\n   */\n  onSuccess = async response => {\n    await userServiceSingleton.handleLoginSuccess(response);\n    this.props.history.push('/');\n  };\n\n  /**\n   * Handle error login\n   *\n   * @param {Object} response\n   * @public\n   */\n  onFailure = response => console.error('error', response);\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <Page pageTitle=\"Login\">\n        <GitHubLogin\n          clientId={userServiceSingleton.clientId}\n          onSuccess={this.onSuccess}\n          onFailure={this.onFailure}\n          redirectUri={authHandler.endpoints.redirectUri}\n        />\n      </Page>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n * MenuItem component.\n */\nconst MenuItem = ({ path, text }) => {\n  return <Link to={path}>{text}</Link>\n};\n\nexport default MenuItem;\n","const Routes = () => {\n    return [\n      {\n        path: '/recipe/add',\n        text: 'Add a Recipe',\n        className: '',\n        showWhenLoggedOut: false,\n        showWhenLoggedIn: true,\n      },\n      {\n        path: '/',\n        text: 'View Recipes',\n        className: '',\n        showWhenLoggedOut: true,\n        showWhenLoggedIn: true,\n      },\n      {\n        path: '/login',\n        text: 'Login',\n        className: '',\n        showWhenLoggedOut: true,\n        showWhenLoggedIn: false,\n      }\n    ];\n  };\n  \n  export default Routes();\n  ","import React from 'react';\nimport MenuItem from './MenuItem';\nimport Routes from '../../Routes';\nimport userServiceSingleton from '../UserService';\n\nimport './MainMenu.css';\nimport Button from '../Button/Button';\n\nconst MainMenu = () => {\n  let routes = Routes;\n\n  if (userServiceSingleton.isUserAdmin) {\n    routes = routes.filter((route, index) => {\n      return route.showWhenLoggedIn;\n    });\n  } else {\n    routes = routes.filter((route, index) => {\n      return route.showWhenLoggedOut;\n    });\n  }\n\n  return (\n    <div className=\"MainMenu-container\">\n      {routes.map((route, index) => (\n        <MenuItem\n          key={index}\n          menuClass={route.className}\n          path={route.path}\n          text={route.text}\n        />\n      ))}\n      {userServiceSingleton.isUserAdmin && (\n        <Button\n          text=\"Logout\"\n          link=\"#\"\n          className=\"btn btn_secondary\"\n          isBtn={true}\n          onClick={() => userServiceSingleton.logout()}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MainMenu;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport FormPage from './components/Page/FormPage/FormPage';\nimport ListPage from './components/Page/ListPage/ListPage';\nimport LoginPage from './components/Page/Login/LoginPage';\nimport MainMenu from './components/Menu/MainMenu';\nimport userServiceSingleton from './components/UserService';\nimport messageServiceSingleton from './components/MessageService';\nimport './App.css';\n\n/**\n * App component.\n * \n * @public\n */\nclass App extends Component {\n  /**\n   * App contructor.\n   *\n   * @public\n   */\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    // Set app state for user service.\n    userServiceSingleton.setAppComponent(this);\n\n    // Set app state for message service.\n    messageServiceSingleton.setAppComponent(this);\n  }\n\n  /**\n   * Handle componentDidMount actions.\n   *\n   * @public\n   */\n  componentDidMount = async () => {\n    userServiceSingleton.appSetup();\n    this.hasMounted = true;\n  };\n\n  /**\n   * Render App component.\n   *\n   * @public\n   */\n  render() {\n    // If the component hasn't mounted yet we need to wait so\n    // that we can handle user auth.\n    if (!this.hasMounted) {\n      return <div />;\n    }\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <MainMenu userUtility={this.state.userUtility} />\n          </header>\n          <section className=\"App-body\">\n            <Switch>\n              <PrivatePropsRoute\n                exact\n                path=\"/recipe/add\"\n                component={FormPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n              <PropsRoute\n                exact\n                path=\"/\"\n                component={ListPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n              <PropsRoute\n                exact\n                path=\"/login\"\n                component={LoginPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n              <PropsRoute\n                exact\n                path=\"/recipe/edit/:recipeId\"\n                component={FormPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n            </Switch>\n          </section>\n        </div>\n      </Router>\n    );\n  }\n}\n\n/**\n * Render component with merged props.\n *\n * @param {Object} component\n * @param  {...any} props\n */\nconst renderMergedProps = (component, ...props) => {\n  const finalProps = Object.assign({}, ...props);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Add props to a route.\n *\n * @param {Object} Object\n * @param {Object} component\n * @param {...any} props\n */\nconst PropsRoute = ({ component, ...props }) => {\n  return (\n    <Route\n      {...props}\n      render={routeProps => {\n        return renderMergedProps(component, routeProps, props);\n      }}\n    />\n  );\n};\n\n/**\n * Add props to a private route.\n *\n * @param {Object} Object\n * @param {Object} component\n * @param {...any} props\n */\nconst PrivatePropsRoute = ({ component, ...props }) => {\n  return (\n    <Route\n      {...props}\n      render={routeProps => {\n        if (props.userUtility.isUserAdmin) {\n          return renderMergedProps(component, routeProps, props);\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
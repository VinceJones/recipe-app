{"version":3,"sources":["components/Message/Message.js","components/Page/Page.js","models/Ingredient.js","models/Tag.js","models/Recipe.js","components/StorageHandler.js","components/RecipeConfig.js","components/Button/Button.js","components/Form/IngredientForm.js","components/Form/IngredientFormContainer.js","components/Form/TagForm.js","components/Form/TagFormContainer.js","components/Form/RecipeForm.js","components/Message/MessageService.js","components/Page/FormPage/FormPage.js","components/Modal/Modal.js","components/Modal/DeleteRecipeModal.js","components/Accordion/AccordionSection.js","components/Accordion/Accordion.js","components/Page/ListPage/ListIngredient.js","components/Accordion/ListPageAccordion.js","components/Form/ListPageFilterForm.js","components/FilterHandler.js","components/Page/ListPage/ListPage.js","components/AuthHandler.js","components/Page/Login/LoginPage.js","components/Menu/MenuItem.js","Routes.js","components/Menu/MainMenu.js","models/Message.js","models/User.js","App.js","serviceWorker.js","index.js"],"names":["Message","getContainerClass","status","containerClass","concat","react_default","a","createElement","this","message","className","text","props","messageUtility","getMessage","Component","Page","componentDidMount","_callee","regenerator_default","wrap","_context","prev","next","_this","userUtility","user","clientId","setClientId","getIsUserAdmin","shown","toggleMessageShown","stop","componentWillUnmount","_callee2","_context2","clearMessages","Message_Message_Message","pageTitle","children","Ingredient","ing","arguments","length","undefined","Object","classCallCheck","name","amount","measurementType","Tag","tag","id","Recipe","recipe","tranformIngredientData","ingData","ingredients","forEach","push","transformTagData","tagData","tags","description","StorageHandler","postRecipe","_ref","asyncToGenerator","mark","data","json","headers","options","JSON","stringify","postHeaders","method","body","makeRequest","endpoints","postRecipes","then","responseJson","catch","error","console","log","abrupt","sent","_x","apply","putRecipe","_ref2","updateRecipe","_x2","getRecipes","_callee3","_context3","responseData","parse","recipes","recipeData","getRecipeById","_ref4","_callee4","endpoint","_context4","isEmpty","parsedData","_x3","obj","key","hasOwnProperty","deleteRecipeById","_ref5","_callee5","_context5","deleteRecipe","_x4","_ref6","_callee6","_args6","_context6","fetch","host","response","result","_x5","Headers","append","RecipeConfig","value","rows","columns","Button","onClick","e","preventDefault","attributes","classes","attr","link","isBtn","objectSpread","recipeConfig","IngredientForm","handleFieldChange","event","inputElement","target","ingredient","onChange","type","measurementTypes","map","measurement","index","showDeleteButton","Button_Button","requestDeleteGroup","IngredientFormContainer","newIngValues","toConsumableArray","_this2","IngredientForm_IngredientForm","shouldShowDeleteButton","requestAddGroup","TagForm","requestDeleteTag","TagFormContainer","newTagValues","TagForm_TagForm","requestAddTag","RecipeForm","handleSubmit","onSubmit","handleRecipeFieldChange","textAreaConfig","cols","TagFormContainer_TagFormContainer","handleChildFieldChange","handleDeleteItemFromArray","handleAddTag","IngredientFormContainer_IngredientFormContainer","handleDeleteIngredientGroup","handleAddIngredientGroup","MessageService","statuses","WARNING","ERROR","SUCCESS","getPostMessageStatus","saved","getSavedRecipeMessage","getRecipeNotFoundStatus","getRecipeNotFoundMessage","getRecipeUpdateStatus","getRecipeUpdateMessage","getRecipeDeleteStatus","getRecipeDeleteMessage","getRecipeDeleteFailStatus","getRecipeDeleteFailMessage","storageHandler","messageService","FormPage","possibleConstructorReturn","getPrototypeOf","call","getRecipeFromPath","setPageTitle","state","setState","recipeId","match","params","parseInt","setMessage","history","recipeFieldElement","field","newValuesCollection","filter","ingIdx","propName","item","itemIdx","_ref3","res","bind","assertThisInitialized","Page_Page_Page","RecipeForm_RecipeForm","fieldName","Modal","getShowHideClassName","show","hideModal","DeleteRecipeModal","Modal_Modal_Modal","showModal","recipeName","handleDeleteRecipe","AccordionSection","label","isOpen","getArrowIcon","Accordion","_assertThisInitialize","allowMultipleOpen","openSections","defineProperty","child","Accordion_AccordionSection","defaultProps","ListIngredient","React","ListPageAccordion","components_Accordion_Accordion","ListIngredient_ListIngredient","isUserAdmin","ListPageFilterForm","filterList","filterValue","placeholder","ListPageAccordion_ListPageAccordion","FilterHandler","items","search","haystack","needle","Array","i","String","toLowerCase","filterHandler","ListPage","updateStateWithRecipes","filteredRecipes","updatedList","filterItems","ListPageFilterForm_ListPageFilterForm","DeleteRecipeModal_DeleteRecipeModal","AuthHandler","getClientId","getAccessToken","code","accessToken","_args4","redirectUri","authHandler","LoginPage","onSuccess","accessTokenResponse","setUser","onFailure","GitHubLogin_default","MenuItem","path","Routes","isAdmin","MainMenu","routes","route","Menu_MenuItem","menuClass","_ref$status","_ref$text","_ref$shown","User","App","getUser","storageItem","localStorage","getItem","storageKey","_callee7","_context7","_ref8","_callee8","_context8","setItem","react_router_dom","components_Menu_MainMenu","react_router","App_PropsRoute","exact","component","App_PrivatePropsRoute","renderMergedProps","_len","_key","finalProps","assign","PropsRoute","_ref9","objectWithoutProperties","render","routeProps","PrivatePropsRoute","_ref10","to","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.717d4307.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Message.css';\n\n/**\n * Handle messages set in the header.\n */\nexport default class Message extends Component {\n  /**\n   * Get the message properties from message utility.\n   */\n  get message() {\n    if (this.props && this.props.messageUtility) {\n      return this.props.messageUtility.getMessage();\n    }\n    \n    return {};\n  }\n\n  /**\n   * Get the container class based on the status.\n   *\n   * @param {string} status\n   * @public\n   */\n  getContainerClass = status => {\n    let containerClass = 'Message-container';\n\n    switch (status) {\n      case 'error':\n        containerClass = containerClass.concat(' Message-error');\n        break;\n      case 'success':\n        containerClass = containerClass.concat(' Message-success');\n        break;\n      case 'warning':\n        containerClass = containerClass.concat(' Message-warning');\n        break;\n      default:\n        return '';\n    }\n    return containerClass;\n  };\n\n  /**\n   * Render Message.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {this.message && (\n          <div className={this.getContainerClass(this.message.status)}>\n            <p className=\"Message-body\">{this.message.text}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Message from '../Message/Message';\nimport PropTypes from 'prop-types';\n\nimport './Page.css';\n\n/**\n * Page component.\n *\n * @public\n */\nexport default class Page extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Object).isRequired,\n    pageTitle: PropTypes.string.isRequired,\n    messageUtility: PropTypes.object.isRequired,\n    userUtility: PropTypes.object.isRequired\n  };\n\n  /**\n   * Set message state.\n   *\n   * @public\n   */\n  componentDidMount = async () => {\n    if (this.props.userUtility.user.clientId === '') {\n      await this.props.userUtility.setClientId();\n      await this.props.userUtility.getIsUserAdmin();\n    }\n\n    if (\n      this.props.messageUtility &&\n      this.props.messageUtility.message.shown === false\n    ) {\n      this.props.messageUtility.toggleMessageShown();\n    }\n  };\n\n  /**\n   * Clear messages if they have been shown.\n   *\n   * @public\n   */\n  componentWillUnmount = async () => {\n    if (this.props.messageUtility.message.shown) {\n      await this.props.messageUtility.clearMessages();\n    }\n  };\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        <div>\n          <Message messageUtility={this.props.messageUtility} />\n        </div>\n        <div className=\"page container\">\n          <div>\n            <h1 className=\"Page-title\">{this.props.pageTitle}</h1>\n          </div>\n          <div>{this.props.children}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","/**\n * Ingredient model.\n */\nexport default class Ingredient {\n  /**\n   * Ingredient constructor.\n   *\n   * @param {Object} ing\n   */\n  constructor(ing = {}) {\n    this.name = ing.name ? ing.name : '';\n    this.amount = ing.amount ? ing.amount : '';\n    this.measurementType = ing.measurementType ? ing.measurementType : '';\n  }\n}\n","/**\n * Tag model.\n *\n * @public\n */\nexport default class Tag {\n  /**\n   * Tag constructor.\n   *\n   * @param {Object} tag\n   * @public\n   */\n  constructor(tag = {}) {\n    this.id = tag.id ? tag.id : '';\n    this.name = tag.name ? tag.name : '';\n  }\n}\n","import Ingredient from './Ingredient';\nimport Tag from './Tag';\n\n/**\n * Recipe model.\n *\n * @public\n */\nexport default class Recipe {\n  /**\n   * Recipe constructor.\n   *\n   * @param {Object} recipe\n   */\n  constructor(recipe = {}) {\n    this.id = recipe.id !== '' ? recipe.id : '';\n    this.name = recipe.name ? recipe.name : '';\n    this.description = recipe.description ? recipe.description : '';\n    this.ingredients = this.tranformIngredientData(recipe.ingredients);\n    this.tags = this.transformTagData(recipe.tags);\n  }\n\n  /**\n   * Transform ingredient data into array of Ingredients.\n   * \n   * @param {Object[]} ingData\n   * @public\n   */\n  tranformIngredientData = ingData => {\n    if (!ingData) {\n      return [new Ingredient()];\n    }\n\n    const ingredients = [];\n    ingData.forEach(ing => {\n      ingredients.push(new Ingredient(ing));\n    });\n\n    return ingredients;\n  }\n\n  /**\n   * Transform ingredient data into array of Ingredients.\n   * \n   * @param {Object[]} tagData\n   * @public\n   */\n  transformTagData = tagData => {\n    if (!tagData) {\n      return [new Tag()];\n    }\n\n    const tags = [];\n    tagData.forEach(tag => {\n      tags.push(new Tag(tag));\n    })\n\n    return tags;\n  }\n}\n","import Recipe from '../models/Recipe';\n\n/**\n * Handle storage of data.\n */\nexport default class StorageHandler {\n  /**\n   * StorageHandler constructor.\n   *\n   * @public\n   */\n  constructor() {\n    this.endpoints = {\n      host: this.host + '://localhost:5000',\n      postRecipes: '/recipes/post',\n      updateRecipe: '/recipes/update',\n      deleteRecipe: '/recipes/delete',\n      getRecipes: '/recipes/get'\n    };\n  }\n\n  get host() {\n    if (process.env.NODE_ENV === 'production') {\n      return 'http';\n    }\n\n    return 'http';\n  }\n\n  /**\n   * Get headers to send a POST request.\n   *\n   * @public\n   */\n  get postHeaders() {\n    const headers = new Headers();\n    headers.append('Content-type', 'application/json');\n    headers.append('Accept', 'application/json');\n    return headers;\n  }\n\n  /**\n   * Write the data to a storage.\n   *\n   * @param {data}\n   * @public\n   */\n  postRecipe = async data => {\n    const json = JSON.stringify(data);\n    const headers = this.postHeaders;\n\n    const options = {\n      method: 'POST',\n      headers,\n      body: json\n    };\n\n    return await this.makeRequest(this.endpoints.postRecipes, options)\n      .then(responseJson => {\n        return responseJson;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Write the data to a storage.\n   *\n   * @param {data}\n   * @public\n   */\n  putRecipe = async data => {\n    const json = JSON.stringify(data);\n    const headers = this.postHeaders;\n\n    const options = {\n      method: 'PUT',\n      headers,\n      body: json\n    };\n\n    return await this.makeRequest(this.endpoints.updateRecipe, options)\n      .then(responseJson => {\n        return responseJson;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Get the recipes from storage.\n   *\n   * @public\n   */\n  getRecipes = async () => {\n    return this.makeRequest(this.endpoints.getRecipes)\n      .then(responseJson => {\n        const responseData = JSON.parse(responseJson.data);\n        const recipes = [];\n\n        responseData.data.forEach(recipeData => {\n          recipes.push(new Recipe(recipeData));\n        });\n\n        return recipes;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Get recipe by ID.\n   *\n   * @param {number} id\n   * @public\n   */\n  getRecipeById = async id => {\n    const endpoint = this.endpoints.getRecipes + '/' + id;\n\n    return await this.makeRequest(endpoint)\n      .then(responseJson => {\n        if (this.isEmpty(responseJson.data)) {\n          return undefined;\n        }\n        const parsedData = JSON.parse(responseJson.data);\n\n        if (parsedData !== undefined) {\n          return new Recipe(parsedData);\n        }\n\n        return undefined;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Check if an object is empty.\n   *\n   * @param {Object} obj\n   * @public\n   */\n  isEmpty = obj => {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n    return true;\n  };\n\n  /**\n   * Delete recipe by ID.\n   *\n   * @param {number} id\n   * @public\n   */\n  deleteRecipeById = async id => {\n    const endpoint = this.endpoints.deleteRecipe + '/' + id;\n\n    const options = {\n      method: 'DELETE'\n    };\n\n    return await this.makeRequest(endpoint, options)\n      .then(responseJson => {\n        const responseData = JSON.parse(responseJson.data);\n        return responseData;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  /**\n   * Make a request.\n   *\n   * @param {endpoint}\n   * @param {options}\n   * @public\n   */\n  makeRequest = async (endpoint, options = {}) => {\n    return fetch(this.endpoints.host + endpoint, options)\n      .then(response => response.json())\n      .then(result => {\n        return result;\n      })\n      .catch(error => {\n        console.log('error', error);\n        return error;\n      });\n  };\n}\n","/**\n * Recipe configuration\n */\nexport default class RecipeConfig {\n\n    /**\n     * Get the ingredient measurement types.\n     */\n    get measurementTypes() {\n        return [\n            {\n                name: 'Each',\n                value: 'ea'\n            },\n            {\n                name: 'Pinch',\n                value: 'pinch'\n            },\n            {\n                name: 'Teaspoon(s)',\n                value: 'tsp'\n            },\n            {\n                name: 'Tablespoon(s)',\n                value: 'tbsp'\n            },\n            {\n                name: 'Cup(s)',\n                value: 'cp'\n            },\n            {\n                name: 'Quart(s)',\n                value: 'qt'\n            },\n            {\n                name: 'Gallon(s)',\n                value: 'gl'\n            },\n            {\n                name: 'Ounce(s)',\n                value: 'oz'\n            },\n            {\n                name: 'Pound(s)',\n                value: 'lbs'\n            },\n            {\n                name: 'Liter(s)',\n                value: 'lt'\n            },\n            {\n                name: 'Milliliter(s)',\n                value: 'ml'\n            },\n            {\n                name: 'Gram(s)',\n                value: 'gr'\n            },\n            {\n                name: 'Kilogram(s)',\n                value: 'kilo'\n            }\n        ];\n    };\n\n    /**\n     * Get textare configuration.\n     */\n    get textAreaConfig() {\n        return {\n            rows: '10',\n            columns: '30',\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Button component.\n * \n * @public\n */\nexport default class Button extends Component {\n  static propTypes = {\n    link: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    attr: PropTypes.objectOf(PropTypes.string),\n    isBtn: PropTypes.bool,\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n    preventDefault: PropTypes.bool\n  };\n\n  /**\n   * Get classes to apply to the button.\n   *\n   * @public\n   */\n  get className() {\n    let classes = 'btn';\n\n    if (\n      this.props.className !== undefined &&\n      this.props.className !== null &&\n      this.props.className !== ''\n    ) {\n      classes += ' ' + this.props.className;\n    }\n\n    return classes;\n  }\n\n  /**\n   * Get attributes to apply to the button.\n   * \n   * @public\n   */\n  get attributes() {\n    let attr = {};\n\n    attr['href'] = this.props.link;\n\n    if (this.props.isBtn) attr['role'] = 'button';\n    if (this.props.onClick) attr['onClick'] = this.onClick;\n    if (this.props.className) attr['className'] = this.props.className;\n\n    return {...attr, ...this.props.attr};\n  }\n\n  /**\n   * Handle click events and preventDefault when needed.\n   * \n   * @public\n   */\n  onClick = (e) => {\n    if (this.props.preventDefault) {\n      e.preventDefault();\n    }\n\n    this.props.onClick();\n  }\n\n  /**\n   * Render Button.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <a {...this.attributes}>\n        {this.props.text}\n      </a>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\nimport RecipeConfig from '../RecipeConfig';\nimport Ingredient from '../../models/Ingredient';\n\nconst recipeConfig = new RecipeConfig();\n\n/**\n * IngredientForm component.\n *\n * @public\n */\nexport default class IngredientForm extends Component {\n  static propTypes = {\n    ingredient: PropTypes.instanceOf(Ingredient),\n    onChange: PropTypes.func.isRequired,\n    showDeleteButton: PropTypes.bool.isRequired,\n    requestDeleteGroup: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Handle recipe change events.\n   *\n   * @param {Object} event\n   * @public\n   */\n  handleFieldChange = () => event => {\n    const inputElement = event.target;\n    let ingredient = { ...this.props.ingredient };\n    ingredient[inputElement.name] = inputElement.value;\n    this.props.onChange(ingredient);\n  };\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className=\"Ingredient-group\">\n        <div className=\"Ingredient-field\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.props.ingredient.name}\n            onChange={this.handleFieldChange()}\n          />\n        </div>\n        <div className=\"Ingredient-field Ingredient-fieldInline\">\n          <label>Amount</label>\n          <input\n            className=\"Ingredient-amount\"\n            type=\"text\"\n            name=\"amount\"\n            value={this.props.ingredient.amount}\n            onChange={this.handleFieldChange()}\n          />\n        </div>\n        <div className=\"Ingredient-field Ingredient-fieldInline\">\n          <label>Measurement Type</label>\n          <select\n            name=\"measurementType\"\n            value={this.props.ingredient.measurementType}\n            onChange={this.handleFieldChange()}\n          >\n            {recipeConfig.measurementTypes.map((measurement, index) => (\n              <option value={measurement.value} key={index}>\n                {measurement.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"Ingredient-removeBtn\">\n          {this.props.showDeleteButton ? (\n            <Button\n              text=\"Remove Ingredient\"\n              link=\"#\"\n              className=\"btn btn_secondary\"\n              isBtn={true}\n              onClick={this.props.requestDeleteGroup}\n              preventDefault={true}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport IngredientForm from './IngredientForm';\nimport Button from '../Button/Button';\nimport Ingredient from '../../models/Ingredient';\n\n/**\n * IngredientFormContainer component.\n *\n * @public\n */\nexport default class IngredientFormContainer extends Component {\n  static propTypes = {\n    ingredients: PropTypes.arrayOf(PropTypes.instanceOf(Ingredient)),\n    onChange: PropTypes.func.isRequired,\n    requestDeleteGroup: PropTypes.func.isRequired,\n    requestAddGroup: PropTypes.func.isRequired\n  };\n\n  /**\n   * Get whether we should delete the the group.\n   */\n  get shouldShowDeleteButton() {\n    return this.props.ingredients.length > 1;\n  }\n\n  /**\n   * Handle ingredient change events.\n   *\n   * @param {number} index\n   * @param {Object} newIngValues\n   * @public\n   */\n  handleFieldChange = index => newIngValues => {\n    const ingredients = [...this.props.ingredients];\n    ingredients[index] = new Ingredient(newIngValues);\n    this.props.onChange(ingredients);\n  };\n\n  /**\n   * Render IngredientFormContainer.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        <h4>Ingredients</h4>\n        <div className=\"Ingredient-container\">\n          {this.props.ingredients.map((ingredient, index) => (\n            <IngredientForm\n              key={index}\n              ingredient={ingredient}\n              onChange={this.handleFieldChange(index)}\n              showDeleteButton={this.shouldShowDeleteButton}\n              requestDeleteGroup={() => this.props.requestDeleteGroup(index)}\n            />\n          ))}\n          <div className=\"Ingredient-addBtn\">\n            <Button\n              text=\"Add Ingredient\"\n              link='#'\n              className=\"btn btn_tertiary\"\n              isBtn={true}\n              onClick={this.props.requestAddGroup}\n              preventDefault={true}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tag from '../../models/Tag';\nimport Button from '../Button/Button';\n\n/**\n * TagForm component.\n *\n * @public\n */\nexport default class TagForm extends Component {\n  static propTypes = {\n    tag: PropTypes.instanceOf(Tag),\n    onChange: PropTypes.func.isRequired\n  };\n\n  /**\n   * Get the tag.\n   *\n   * @public\n   */\n  get tag() {\n    return this.props.tag;\n  }\n\n  /**\n   * Handle tag change events.\n   *\n   * @param {Object} event\n   * @public\n   */\n  handleFieldChange = () => event => {\n    const inputElement = event.target;\n    let tag = { ...this.props.tag };\n    tag[inputElement.name] = inputElement.value;\n    this.props.onChange(tag);\n  };\n\n  /**\n   * Render TagForm.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className=\"TagForm-container\">\n        <label className=\"isHidden\">Tag</label>\n        <input\n          className=\"TagForm-input\"\n          type=\"text\"\n          name=\"name\"\n          value={this.props.tag.name}\n          onChange={this.handleFieldChange()}\n        />\n        <Button\n          text=\"&times;\"\n          link=\"#\"\n          isBtn={false}\n          className=\"Tag-removeIcon\"\n          onClick={() => this.props.requestDeleteTag()}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tag from '../../models/Tag';\nimport TagForm from './TagForm';\nimport Button from '../Button/Button';\n\n/**\n * TagFormContainer component.\n *\n * @public\n */\nexport default class TagFormContainer extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    requestDeleteTag: PropTypes.func.isRequired,\n    tags: PropTypes.arrayOf(PropTypes.instanceOf(Tag)),\n  };\n\n  /**\n   * Handle tag change events.\n   *\n   * @param {number} index\n   * @param {Object} newTagValues\n   * @public\n   */\n  handleFieldChange = index => newTagValues => {\n    \n    const tags = [...this.props.tags];\n    tags[index] = new Tag(newTagValues);\n    this.props.onChange(tags);\n  };\n\n  /**\n   * Render TagFormContainer.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        <h4>Tags</h4>\n        {this.props.tags.map((tag, index) => (\n          <TagForm\n            key={index}\n            tag={tag}\n            index={index}\n            onChange={this.handleFieldChange(index)}\n            requestDeleteTag={() => this.props.requestDeleteTag(index)}\n          />\n        ))}\n        <div className=\"Tag-addBtn\">\n          <Button\n            text=\"Add Tag\"\n            link=\"#\"\n            className=\"btn btn_tertiary\"\n            isBtn={true}\n            onClick={this.props.requestAddTag}\n            preventDefault={true}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeConfig from '../RecipeConfig';\nimport IngredientFormContainer from './IngredientFormContainer';\nimport Recipe from '../../models/Recipe';\nimport TagFormContainer from './TagFormContainer';\n\nconst recipeConfig = new RecipeConfig();\n\n/**\n * RecipeForm component.\n *\n * @public\n */\nexport default class RecipeForm extends Component {\n  static propTypes = {\n    recipe: PropTypes.instanceOf(Recipe),\n    handleSubmit: PropTypes.func.isRequired,\n    handleRecipeFieldChange: PropTypes.func.isRequired,\n    handleChildFieldChange: PropTypes.func.isRequired,\n    handleDeleteIngredientGroup: PropTypes.func.isRequired,\n    handleAddIngredientGroup: PropTypes.func.isRequired\n  };\n\n  /**\n   * Handle form submit.\n   *\n   * @async\n   * @param {Object} event\n   * @public\n   */\n  handleSubmit = async event => {\n    this.props.handleSubmit(event);\n  };\n\n  /**\n   * Render RecipeForm.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <form className=\"Recipe-container\" onSubmit={this.props.handleSubmit}>\n        <div className=\"Recipe-field\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.props.recipe.name}\n            onChange={this.props.handleRecipeFieldChange()}\n          />\n        </div>\n        <div className=\"Recipe-field\">\n          <label>Description:</label>\n          <textarea\n            name=\"description\"\n            rows={recipeConfig.textAreaConfig.rows}\n            cols={recipeConfig.textAreaConfig.columns}\n            value={this.props.recipe.description}\n            onChange={this.props.handleRecipeFieldChange()}\n          />\n        </div>\n        <TagFormContainer\n          tags={this.props.recipe.tags}\n          onChange={this.props.handleChildFieldChange('tags')}\n          requestDeleteTag={index => this.props.handleDeleteItemFromArray(index, 'tags')}\n          requestAddTag={() => this.props.handleAddTag()}\n        />\n        <IngredientFormContainer\n          ingredients={this.props.recipe.ingredients}\n          onChange={this.props.handleChildFieldChange('ingredients')}\n          requestDeleteGroup={index =>\n            this.props.handleDeleteIngredientGroup(index)\n          }\n          requestAddGroup={this.props.handleAddIngredientGroup}\n        />\n        <div>\n          <input className=\"btn btn_primary\" type=\"submit\" value=\"Submit\" />\n        </div>\n      </form>\n    );\n  }\n}\n","const WARNING = 'warning';\nconst ERROR = 'error';\nconst SUCCESS = 'success';\n\n/**\n * MessageService.\n */\nexport default class MessageService {\n\n  /**\n   * Available Statuses.\n   * \n   * @public\n   */\n  statuses = () => {\n    return {\n      WARNING: WARNING,\n      ERROR: ERROR,\n      SUCCESS: SUCCESS\n    }\n  }\n  \n  /**\n   * Get the message status after recipe POST has completed.\n   *\n   * @param {bool} saved\n   * @public\n   */\n  getPostMessageStatus = saved => {\n    console.log('getPostMessageStatus saved', saved);\n    return saved ? SUCCESS : ERROR;\n  };\n\n  /**\n   * Get the message after recipe POST has completed.\n   *\n   * @param {Boolean} saved\n   * @public\n   */\n  getSavedRecipeMessage = saved => {\n    return saved ? 'Recipe has been saved.' : 'Recipe has not been saved.';\n  };\n\n  /**\n   * Get the recipe not found status.\n   *\n   * @public\n   */\n  getRecipeNotFoundStatus = () => {\n    return WARNING;\n  }\n\n  /**\n   * Get recipe not found message.\n   * \n   * @public\n   */\n  getRecipeNotFoundMessage = () => {\n    return 'Recipe could not be found, try adding a new recipe';\n  }\n\n  /**\n   * Get the recipe not found status.\n   *\n   * @public\n   */\n  getRecipeUpdateStatus = () => {\n    return SUCCESS;\n  }\n\n  /**\n   * Get recipe not found message.\n   * \n   * @public\n   */\n  getRecipeUpdateMessage = (name = '') => {\n    return name + ' recipe has been updated.';\n  }\n\n  /**\n   * Get the recipe delete status.\n   *\n   * @public\n   */\n  getRecipeDeleteStatus = () => {\n    return SUCCESS;\n  }\n\n  /**\n   * Get recipe delete message.\n   * \n   * @public\n   */\n  getRecipeDeleteMessage = (name = '') => {\n    return name + ' recipe has been deleted.';\n  }\n\n  /**\n   * Get the recipe delete status.\n   *\n   * @public\n   */\n  getRecipeDeleteFailStatus = () => {\n    return ERROR;\n  }\n\n  /**\n   * Get recipe delete message.\n   * \n   * @public\n   */\n  getRecipeDeleteFailMessage = (name = '') => {\n    return name + ' recipe has not been deleted.';\n  }\n}\n","import React, { Component } from 'react';\nimport Page from '../Page';\nimport Recipe from '../../../models/Recipe';\nimport Ingredient from '../../../models/Ingredient';\nimport StorageHandler from '../../StorageHandler';\nimport RecipeForm from '../../Form/RecipeForm';\nimport MessageService from '../../Message/MessageService';\n\nimport './FormPage.css';\nimport Tag from '../../../models/Tag';\n\nconst storageHandler = new StorageHandler();\nconst messageService = new MessageService();\n\n/**\n * FormPage component.\n *\n * @public\n */\nexport default class FormPage extends Component {\n  /**\n   * FormPage constructor.\n   *\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipe: new Recipe(),\n      pageTitle: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  /**\n   * Get recipe for editing\n   *\n   * @public\n   */\n  componentDidMount = async () => {\n    await this.getRecipeFromPath();\n    this.setPageTitle();\n  };\n\n  /**\n   * Set the page title based on initial state.\n   *\n   * @public\n   */\n  setPageTitle = () => {\n    const state = { ...this.state };\n\n    if (this.state.recipe.name !== '' && this.state.recipe.id !== '') {\n      state.pageTitle = 'Edit ' + this.state.recipe.name + ' recipe';\n    } else {\n      state.pageTitle = 'Add a Recipe';\n    }\n\n    this.setState(state);\n  };\n\n  /**\n   * Get recipe from path for editing.\n   *\n   * @public\n   */\n  getRecipeFromPath = async () => {\n    if (!this.props.match.params.hasOwnProperty('recipeId')) {\n      return;\n    }\n\n    const recipeId = parseInt(this.props.match.params.recipeId);\n    await storageHandler.getRecipeById(recipeId).then(recipe => {\n      if (recipe instanceof Recipe) {\n        this.setState({ recipe: recipe });\n      } else {\n        this.props.messageUtility.setMessage(\n          messageService.getRecipeNotFoundStatus(),\n          messageService.getRecipeNotFoundMessage()\n        );\n        this.props.history.push('/recipe/add');\n      }\n    });\n  };\n\n  /**\n   * Handle top level field changes.\n   *\n   * @param {Object} event\n   * @public\n   */\n  handleRecipeFieldChange = () => event => {\n    const recipeFieldElement = event.target;\n    const recipe = this.state.recipe;\n    recipe[recipeFieldElement.name] = recipeFieldElement.value;\n    this.setState({\n      recipe: recipe\n    });\n  };\n\n  /**\n   * Handle child field changes.\n   *\n   * @param {string} field\n   * @param {Object} newValuesCollection\n   * @public\n   */\n  handleChildFieldChange = field => newValuesCollection => {\n    const state = { ...this.state };\n    state.recipe[field] = newValuesCollection;\n    this.setState(state);\n  };\n\n  /**\n   * Add an ingredient group.\n   *\n   * @public\n   */\n  handleAddIngredientGroup = () => {\n    const recipe = this.state.recipe;\n    recipe.ingredients = recipe.ingredients.concat([new Ingredient()]);\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Add a tag.\n   *\n   * @public\n   */\n  handleAddTag = () => {\n    const recipe = this.state.recipe;\n    recipe.tags = recipe.tags.concat([new Tag()]);\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Remove an ingredient group.\n   *\n   * @param {number} index\n   * @public\n   */\n  handleDeleteIngredientGroup = index => {\n    const recipe = this.state.recipe;\n    recipe.ingredients = recipe.ingredients.filter(\n      (ing, ingIdx) => index !== ingIdx\n    );\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Remove an item from array.\n   *\n   * @param {number} index\n   * @public\n   */\n  handleDeleteItemFromArray = (index, propName) => {\n    console.log(index, propName);\n    const recipe = this.state.recipe;\n    recipe[propName] = recipe[propName].filter(\n      (item, itemIdx) => index !== itemIdx\n    );\n    this.setState({ recipe: recipe });\n  };\n\n  /**\n   * Handle form submit.\n   *\n   * @async\n   * @param {Object} event\n   * @public\n   */\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    if (\n      this.state.recipe.hasOwnProperty('id') &&\n      this.state.recipe.id !== '' &&\n      this.state.recipe.id !== undefined\n    ) {\n      // Handle update recipe.\n      await storageHandler.putRecipe(this.state.recipe).then(res => {\n        this.props.messageUtility.setMessage(\n          messageService.getRecipeUpdateStatus(res.data),\n          messageService.getRecipeUpdateMessage(this.state.recipe.name)\n        );\n        return res;\n      });\n    } else {\n      // Handle save new recipe.\n      await storageHandler.postRecipe(this.state.recipe).then(res => {\n        this.props.messageUtility.setMessage(\n          messageService.getPostMessageStatus(res.data),\n          messageService.getSavedRecipeMessage(res.data)\n        );\n        return res;\n      });\n    }\n\n    this.props.history.push('/');\n  };\n\n  /**\n   * Render FormPage.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <Page\n        pageTitle={this.state.pageTitle}\n        messageUtility={this.props.messageUtility}\n        userUtility={this.props.userUtility}\n      >\n        <RecipeForm\n          recipe={this.state.recipe}\n          handleSubmit={event => this.handleSubmit(event)}\n          handleRecipeFieldChange={() => this.handleRecipeFieldChange()}\n          handleChildFieldChange={fieldName =>\n            this.handleChildFieldChange(fieldName)\n          }\n          handleDeleteIngredientGroup={index =>\n            this.handleDeleteIngredientGroup(index)\n          }\n          handleDeleteItemFromArray={(index, propName) => {\n            this.handleDeleteItemFromArray(index, propName);\n          }}\n          handleAddIngredientGroup={() => this.handleAddIngredientGroup()}\n          handleAddTag={() => this.handleAddTag()}\n        />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\n\nimport './Modal.css';\n\n/**\n * DeleteModal component.\n *\n * @public\n */\nexport default class Modal extends Component {\n  static propTypes = {\n    show: PropTypes.bool.isRequired,\n    hideModal: PropTypes.func.isRequired,\n    children: PropTypes.instanceOf(Object).isRequired,\n  };\n\n  /**\n   * Get the show hide class name.\n   *\n   * @param {Boolean} show\n   * @public\n   */\n  getShowHideClassName = show => {\n    return show ? 'Modal Modal-display' : 'Modal Modal-hide';\n  };\n\n  /**\n   * Render the modal.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className={this.getShowHideClassName(this.props.show)}>\n        <section className=\"Modal-main\">\n          {this.props.children}\n          <div className=\"Modal-btnCloseContainer\">\n            <Button\n              text=\"Close\"\n              link=\"#\"\n              className=\"btn btn_tertiary btn_modalClose\"\n              isBtn={true}\n              onClick={() => this.props.hideModal()}\n            />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport Button from '../Button/Button';\n\n/**\n * DeleteRecipeModal component.\n *\n * @public\n */\nexport default class DeleteRecipeModal extends Component {\n  static propTypes = {\n    showModal: PropTypes.bool.isRequired,\n    hideModal: PropTypes.func.isRequired,\n    handleDeleteRecipe: PropTypes.func.isRequired,\n    deleteRecipe: PropTypes.instanceOf(Object).isRequired\n  };\n\n  /**\n   * Get the name of the recipe to delete.\n   *\n   * @public\n   */\n  get recipeName() {\n    if (\n      this.props.deleteRecipe.hasOwnProperty('name') &&\n      this.props.deleteRecipe.name !== undefined &&\n      this.props.deleteRecipe.name !== null &&\n      this.props.deleteRecipe.name !== ''\n    ) {\n      return this.props.deleteRecipe.name;\n    }\n\n    return 'this';\n  }\n  render() {\n    return (\n      <Modal show={this.props.showModal} hideModal={this.props.hideModal}>\n        <div className=\"ListRecipe-deleteModal\">\n          <h3>Are you sure you would like delete {this.recipeName} recipe?</h3>\n          <div className=\"ListRecipe-buttonGroup\">\n            <Button\n              text=\"Yes\"\n              link=\"#\"\n              className=\"btn btn_secondary\"\n              isBtn={true}\n              onClick={() => this.props.handleDeleteRecipe()}\n            />\n            <Button\n              text=\"No\"\n              link=\"#\"\n              className=\"btn btn_primary\"\n              isBtn={true}\n              onClick={() => this.props.hideModal()}\n            />\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * AccordionSection component.\n *\n * @public\n */\nclass AccordionSection extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Object).isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n  };\n\n  /**\n   * Get arrow used for accordion section.\n   *\n   * @param {isOpen}\n   */\n  getArrowIcon(isOpen) {\n    if (isOpen) return <span>&#9660;</span>;\n\n    return <span>&#9650;</span>;\n  }\n\n  /**\n   * Get the container class to specify if the accordion is open or not.\n   *\n   * @public\n   */\n  getContainerClass() {\n    if (this.props.isOpen) return 'Accordion-container Accordion-selected';\n\n    return 'Accordion-container';\n  }\n\n  /**\n   * Handle open and closing the accordion.\n   *\n   * @public\n   */\n  onClick = event => {\n    this.props.onClick(this.props.label, event);\n  };\n\n  /**\n   * Render AccordionSection.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className={this.getContainerClass()}>\n        <div className=\"Accordion-details\" onClick={this.onClick}>\n          <div>\n            <h3 className=\"Accordion-title\">{this.props.label}</h3>\n            <span className=\"Accordion-icon\">\n              {this.getArrowIcon(this.props.isOpen)}\n            </span>\n          </div>\n\n          {this.props.isOpen && (\n            <div>\n              <hr />\n              <p>{this.props.description}</p>\n              <div className=\"Accordion-inner\">{this.props.children}</div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AccordionSection;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AccordionSection from './AccordionSection';\n\nimport './Accordion.css';\n\n/**\n * Accordion component.\n * \n * @public\n */\nclass Accordion extends Component {\n  static propTypes = {\n    allowMultipleOpen: PropTypes.bool,\n    children: PropTypes.instanceOf(Object).isRequired\n  };\n\n  static defaultProps = {\n    allowMultipleOpen: false\n  };\n\n  /**\n   * Accordion constructor.\n   *\n   * @param {Object} props\n   */\n  constructor(props) {\n    super(props);\n\n    const openSections = {};\n\n    this.props.children.forEach((child, index) => {\n      if (child.props.isOpen) {\n        openSections[child.props.label] = true;\n      } else {\n      }\n    });\n\n    this.state = { openSections };\n  }\n\n  /**\n   * Handle opening and closing accordions.\n   *\n   * @param {string} label\n   * @public\n   */\n  onClick = label => {\n    const {\n      props: { allowMultipleOpen },\n      state: { openSections }\n    } = this;\n\n    const isOpen = !!openSections[label];\n\n    if (allowMultipleOpen) {\n      this.setState({\n        openSections: {\n          ...openSections,\n          [label]: !isOpen\n        }\n      });\n    } else {\n      this.setState({\n        openSections: {\n          [label]: !isOpen\n        }\n      });\n    }\n  };\n\n  /**\n   * Render Accordion.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <li>\n        {this.props.children.map((child, index) => (\n          <AccordionSection\n            key={index}\n            isOpen={!!this.state.openSections[child.props.label]}\n            label={child.props.label}\n            description={child.props.description}\n            onClick={this.onClick}\n          >\n            {child.props.children}\n          </AccordionSection>\n        ))}\n      </li>\n    );\n  }\n}\n\nexport default Accordion;\n","import React from 'react';\n\nexport default class ListIngredient extends React.Component {\n  render() {\n    return (\n      <li>\n        <h3>\n          {this.props.ingredient.amount} {this.props.ingredient.measurementType} - {this.props.ingredient.name}\n        </h3>\n        <div />\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Accordion from './Accordion';\nimport ListIngredient from '../Page/ListPage/ListIngredient';\nimport Button from '../Button/Button';\nimport Recipe from '../../models/Recipe';\n\n/**\n * ListPageAccordion component.\n *\n * @public\n */\nexport default class ListPageAccordion extends Component {\n  static propTypes = {\n    showModal: PropTypes.func.isRequired,\n    recipes: PropTypes.arrayOf(PropTypes.instanceOf(Recipe)).isRequired\n  };\n\n  /**\n   * Render ListPageAccordion.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <ul className=\"ListRecipe-container\">\n        <Accordion allowMultipleOpen>\n          {this.props.recipes.map((recipe, index) => (\n            <div\n              key={index}\n              label={recipe.name}\n              description={recipe.description}\n            >\n              <ul>\n                <h4>Ingredients</h4>\n                {recipe.ingredients.map((ingredient, index) => (\n                  <ListIngredient key={index} ingredient={ingredient} />\n                ))}\n              </ul>\n              {this.props.userUtility.isUserAdmin && (\n                <div>\n                  <Button\n                    text=\"Edit recipe\"\n                    link={'recipe/edit/' + recipe.id}\n                    className=\"btn btn_tertiary\"\n                    isBtn={true}\n                  />\n                  <Button\n                    text=\"Delete recipe\"\n                    link=\"#\"\n                    className=\"btn btn_secondary\"\n                    isBtn={true}\n                    onClick={() => this.props.showModal(recipe)}\n                  />\n                </div>\n              )}\n            </div>\n          ))}\n        </Accordion>\n      </ul>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ListPageAccordion from '../Accordion/ListPageAccordion';\nimport Recipe from '../../models/Recipe';\n\n/**\n * ListPageFilterForm component.\n *\n * @public\n */\nexport default class ListPageFilterForm extends Component {\n  static propTypes = {\n    showModal: PropTypes.func.isRequired,\n    filterList: PropTypes.func.isRequired,\n    recipes: PropTypes.arrayOf(PropTypes.instanceOf(Recipe))\n  };\n\n  /**\n   * Handle the filtering of the list.\n   * \n   * @param {Object} event\n   * @public\n   */\n  filterList = event => {\n    this.props.filterList(event);\n  };\n\n  /**\n   * Render ListPageFilterForm\n   *\n   * @public\n   */\n  render() {\n    return (\n      <div className=\"ListPage-container\">\n        <form>\n          <fieldset>\n            <input\n              type=\"text\"\n              name=\"filterInput\"\n              value={this.props.filterValue}\n              className=\"ListPage-filterInput\"\n              placeholder=\"Search by Recipe name, Ingredient name, or Tag name\"\n              onChange={this.filterList}\n            />\n          </fieldset>\n        </form>\n        <ListPageAccordion\n          recipes={this.props.recipes}\n          showModal={recipe => this.props.showModal(recipe)}\n          userUtility={this.props.userUtility}\n        />\n      </div>\n    );\n  }\n}\n","/**\n * FilterHandler\n *\n * Handle live filtering.\n */\nexport default class FilterHandler {\n  /**\n   * Filter a array by filter value.\n   *\n   * @param {Object[]} items\n   * @param {string}} filterValue\n   */\n  filterItems(items, filterValue) {\n    items = items.filter(item => {\n      return this.search(item, filterValue);\n    });\n\n    return items;\n  }\n\n  /**\n   * Search for a match recursively.\n   *\n   * @param {*} haystack\n   * @param {string} string\n   * @public\n   */\n  search(haystack, needle) {\n    if (haystack instanceof Array) {\n      for (let i = 0; i < haystack.length; i++) {\n        if (this.search(haystack[i], needle)) {\n          return true;\n        }\n      }\n    } else if (typeof haystack === 'object') {\n      for (const key in haystack) {\n        if (this.search(haystack[key], needle)) {\n          return true;\n        }\n      }\n    } else {\n      return (\n        String(haystack)\n          .toLowerCase()\n          .search(needle.toLowerCase()) !== -1\n      );\n    }\n\n    return false;\n  }\n}\n","import React, { Component } from 'react';\nimport Page from '../Page';\nimport DeleteRecipeModal from '../../Modal/DeleteRecipeModal';\nimport StorageHandler from '../../StorageHandler';\nimport MessageService from '../../Message/MessageService';\nimport Recipe from '../../../models/Recipe';\nimport ListPageFilterForm from '../../Form/ListPageFilterForm';\nimport FilterHandler from '../../FilterHandler';\nimport './ListPage.css';\n\nconst storageHandler = new StorageHandler();\nconst messageService = new MessageService();\nconst filterHandler = new FilterHandler();\n\nexport default class ListPage extends Component {\n  /**\n   * ListPage constructor.\n   *\n   * @public\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      deleteRecipe: {},\n      recipes: [],\n      filteredRecipes: [],\n      filterValue: ''\n    };\n  }\n\n  /**\n   * Get recipes and set them to state.\n   *\n   * @public\n   */\n  componentDidMount = () => {\n    this.updateStateWithRecipes();\n  };\n\n  /**\n   * Show the modal.\n   *\n   * @param {Object} recipe\n   * @public\n   */\n  showModal = recipe => {\n    this.setState({ showModal: true, deleteRecipe: recipe });\n  };\n\n  /**\n   * Hide the modal\n   *\n   * @public\n   */\n  hideModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  /**\n   * Update state with new recipes.\n   *\n   * @public\n   */\n  updateStateWithRecipes = () => {\n    storageHandler.getRecipes().then(recipes => {\n      if (recipes && recipes.length > 0 && recipes[0] instanceof Recipe) {\n        this.setState({ recipes: recipes, filteredRecipes: recipes });\n      } else {\n        this.setState({ recipes: [], filteredRecipes: [] });\n      }\n    });\n  };\n\n  /**\n   * Handle delete of a recipe.\n   *\n   * @public\n   */\n  handleDeleteRecipe = () => {\n    const recipe = this.state.deleteRecipe;\n    storageHandler.deleteRecipeById(recipe.id).then(res => {\n      if (res) {\n        this.props.messageUtility.setMessage(\n          messageService.getRecipeDeleteStatus(),\n          messageService.getRecipeDeleteMessage(recipe.name)\n        );\n      } else {\n        this.props.messageUtility.setMessage(\n          messageService.getRecipeDeleteFailStatus(),\n          messageService.getRecipeDeleteFailMessage(recipe.name)\n        );\n      }\n\n      this.setState({ showModal: false });\n      this.updateStateWithRecipes();\n    });\n  };\n\n  /**\n   * Filter the recipes.\n   *\n   * @param {Object} event\n   * @public\n   */\n  filterList = event => {\n    const state = this.state;\n    state.filterValue = event.target.value;\n    this.setState(state);\n\n    // If there is no filter applied then we should revert\n    // the list to the original list of recipes.\n    if (event.target.value === '') {\n      this.setState({ filteredRecipes: this.state.recipes });\n      return;\n    }\n\n    // Start filtering with the unfiltered list of items\n    // so that every item is accounted for in the filtering.\n    const updatedList = filterHandler.filterItems(\n      this.state.recipes,\n      event.target.value\n    );\n\n    this.setState({ filteredRecipes: updatedList });\n  };\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <Page pageTitle=\"Recipes\" messageUtility={this.props.messageUtility} userUtility={this.props.userUtility}>\n        <ListPageFilterForm\n          filterValue={this.state.filterValue}\n          recipes={this.state.filteredRecipes}\n          showModal={recipe => this.showModal(recipe)}\n          filterList={event => this.filterList(event)}\n          userUtility={this.props.userUtility}\n        />\n        {this.props.userUtility.isUserAdmin && (\n          <DeleteRecipeModal\n            showModal={this.state.showModal}\n            handleDeleteRecipe={() => this.handleDeleteRecipe()}\n            hideModal={() => this.hideModal()}\n            deleteRecipe={this.state.deleteRecipe}\n          />\n        )}\n      </Page>\n    );\n  }\n}\n","/**\n * AuthHandler service.\n *\n * @public\n */\nexport default class AuthHandler {\n  /**\n   * StorageHandler constructor.\n   *\n   * @public\n   */\n  constructor() {\n    this.endpoints = {\n      host: 'http://localhost:5000',\n      redirectUri: 'http://localhost:3000/login',\n      accessToken: '/auth/login',\n      clientId: '/auth/get/client_id',\n      isUserAdmin: '/auth/get/isUserAdmin'\n    };\n  }\n\n  /**\n   * Get the client_id from the server.\n   *\n   * @public\n   */\n  getClientId = async () => {\n    return 'f952648e1b2ccf35cdf5';\n    const response = await this.makeRequest(this.endpoints.clientId);\n\n    if (!response.hasOwnProperty('data')) {\n      return '';\n    }\n\n    return response.data;\n  };\n\n  /**\n   * Get the access github access token\n   *\n   * @param {string} code\n   * @public\n   */\n  getAccessToken = async code => {\n    const endpoint = this.endpoints.accessToken + '/' + code;\n    const response = await this.makeRequest(endpoint);\n\n    if (!response.hasOwnProperty('data')) {\n      return '';\n    }\n\n    console.log('getAccessToken', response.data);\n\n    return response;\n  };\n\n  /**\n   * Find out whether the user that loggec in is admin.\n   *\n   * @param {User} user\n   * @public\n   */\n  isUserAdmin = async user => {\n    if (!user.accessToken) {\n      return false;\n    }\n\n    console.log('authHandler.isUserAdmin', user.accessToken);\n    const endpoint = this.endpoints.isUserAdmin + '/' + user.accessToken;\n    const response = await this.makeRequest(endpoint);\n    console.log('isUserAdmin', response);\n    return response.user;\n  };\n\n  /**\n   * Make a request.\n   *\n   * @param {endpoint}\n   * @param {options}\n   * @public\n   */\n  makeRequest = async (endpoint, options = {}) => {\n    return fetch(this.endpoints.host + endpoint, options)\n      .then(response => response.json())\n      .then(result => {\n        return result;\n      })\n      .catch(error => {\n        console.log('error', error);\n        return error;\n      });\n  };\n}\n","import React, { Component } from 'react';\nimport Page from '../Page';\nimport GitHubLogin from 'react-github-login';\nimport AuthHandler from '../../AuthHandler';\n\nconst authHandler = new AuthHandler();\n\nexport default class LoginPage extends Component {\n  /**\n   * Handle successful login\n   *\n   * @param {Object} response\n   * @public\n   */\n  onSuccess = async response => {\n    let accessToken = '';\n    console.log('code:', response.code);\n    const accessTokenResponse = await authHandler.getAccessToken(response.code);\n    \n    if (accessTokenResponse.hasOwnProperty('data')) {\n      accessToken = accessTokenResponse.data;\n    }\n\n    await this.props.userUtility.setUser(accessToken);\n    this.props.history.push('/');\n  };\n\n  /**\n   * Handle error login\n   *\n   * @param {Object} response\n   * @public\n   */\n  onFailure = response => console.error('error', response);\n\n  /**\n   * Render the form.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <Page pageTitle=\"Login\" messageUtility={this.props.messageUtility} userUtility={this.props.userUtility}>\n        <GitHubLogin\n          clientId={this.props.userUtility.user.clientId}\n          onSuccess={this.onSuccess}\n          onFailure={this.onFailure}\n          redirectUri={authHandler.endpoints.redirectUri}\n        />\n      </Page>\n    );\n  }\n}\n","import React from 'react';\nimport Button from '../Button/Button';\n\n/**\n * MenuItem component.\n */\nconst MenuItem = ({ path, text }) => {\n  return <Button className=\"MainMenu-menuItem\" link={path} text={text} />;\n};\n\nexport default MenuItem;\n","const Routes = () => {\n    return [\n      {\n        path: '/recipe/add',\n        text: 'Add a Recipe',\n        className: '',\n        isAdmin: true,\n      },\n      {\n        path: '/',\n        text: 'View Recipes',\n        className: '',\n        isAdmin: false,\n      },\n      {\n        path: '/login',\n        text: 'Login',\n        className: '',\n        isAdmin: false,\n      }\n    ];\n  };\n  \n  export default Routes();\n  ","import React from 'react';\nimport MenuItem from './MenuItem';\nimport Routes from '../../Routes';\n\nimport './MainMenu.css';\n\nconst MainMenu = ({ userUtility }) => {\n  let routes = Routes;\n\n  if (userUtility.isUserAdmin === false) {\n    routes = routes.filter((route, index) => {\n      return !route.isAdmin;\n    });\n  }\n\n  return (\n    <div className=\"MainMenu-container\">\n      {routes.map((route, index) => (\n        <MenuItem\n          key={index}\n          menuClass={route.className}\n          path={route.path}\n          text={route.text}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default MainMenu;\n","/**\n * Message model.\n *\n * @public\n */\nexport default class Message {\n  /**\n   * Message constructor.\n   *\n   * @param {Object} Object\n   * @param {string} status\n   * @param {string} text\n   * @param {Boolean} shown\n   */\n  constructor({ status = '', text = '', shown = true }) {\n    this.status = status ? status : '';\n    this.text = text ? text : '';\n    this.shown = shown;\n  }\n}\n","/**\n * User model.\n *\n * @public\n */\nexport default class User {\n    /**\n     * User constructor.\n     *\n     * @param {Object} User\n     * @public\n     */\n    constructor(user = {}) {\n      this.accessToken = user.accessToken ? user.accessToken : '';\n      this.clientId = user.clientId ? user.clientId : '';\n    }\n  }\n  ","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport FormPage from './components/Page/FormPage/FormPage';\nimport ListPage from './components/Page/ListPage/ListPage';\nimport LoginPage from './components/Page/Login/LoginPage';\nimport MainMenu from './components/Menu/MainMenu';\nimport Message from './models/Message';\nimport AuthHandler from './components/AuthHandler';\nimport User from './models/User';\nimport './App.css';\n\nconst authHandler = new AuthHandler();\n\n/**\n * App component.\n */\nclass App extends Component {\n  /**\n   * App contructor.\n   *\n   * @public\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      messageUtility: {\n        message: new Message({}),\n        getMessage: () => this.getMessage(),\n        clearMessages: () => this.clearMessages(),\n        setMessage: (status, text) => this.setMessage(status, text),\n        toggleMessageShown: () => this.toggleMessageShown()\n      },\n      userUtility: {\n        user: new User(),\n        storageKey: 'recipeAppUser',\n        isUserAdmin: false,\n        setUser: accessToken => this.setUser(accessToken),\n        setClientId: () => this.setClientId(),\n        getIsUserAdmin: () => this.getIsUserAdmin()\n      }\n    };\n  }\n\n  /**\n   * Handle componentDidMount actions.\n   *\n   * @public\n   */\n  componentDidMount = async () => {\n    this.getUser();\n\n    if (this.state.userUtility.user.clientId !== '') {\n      await this.setClientId();\n      await this.getIsUserAdmin();\n    }\n  };\n\n  /**\n   * Clear message.\n   *\n   * @public\n   */\n  clearMessages = async () => {\n    await this.setState(new Message({}));\n  };\n\n  /**\n   * Get the message properties\n   *\n   * @public\n   */\n  getMessage = () => {\n    return this.state.messageUtility.message.props;\n  };\n\n  /**\n   * Set message.\n   *\n   * @public\n   */\n  setMessage = async (status, text) => {\n    const state = this.state;\n    state.messageUtility.message = new Message({ status, text });\n    await this.setState(state);\n  };\n\n  /**\n   * Toggle whether the message has been shown.\n   *\n   * @public\n   */\n  toggleMessageShown = async () => {\n    if (this.state.messageUtility !== undefined) {\n      const state = this.state.messageUtility.message;\n      state.messageUtility.message.shown =\n        state.messageUtility.message.shown === true ? false : true;\n\n      await this.setState(state);\n    }\n  };\n\n  /**\n   * Get the client id.\n   *\n   * @public\n   */\n  setClientId = async () => {\n    const state = this.state;\n    this.state.userUtility.user.clientId = await authHandler.getClientId();\n    console.log('setClientId:', this.state.userUtility.user);\n    this.setState(state);\n  };\n\n  /**\n   * Get the user from local storage if it exists.\n   *\n   * @public\n   */\n  getUser = async () => {\n    const storageItem = await localStorage.getItem(\n      this.state.userUtility.storageKey\n    );\n\n    if (!storageItem) {\n      return;\n    }\n\n    const state = this.state;\n    state.userUtility.user = new User(JSON.parse(storageItem));\n    this.setState(state);\n  };\n\n  /**\n   * Get whether a user is admin.\n   *\n   * @public\n   */\n  getIsUserAdmin = async () => {\n    const isUserAdmin = await authHandler.isUserAdmin(\n      this.state.userUtility.user\n    );\n    console.log('getIsUserAdmin', isUserAdmin);\n    const state = this.state;\n    state.userUtility.isUserAdmin = isUserAdmin;\n    this.setState(state);\n  };\n\n  /**\n   * Set the user information using the accesstoken.\n   *\n   * @param {string} accessToken\n   * @public\n   */\n  setUser = async accessToken => {\n    if (!accessToken) {\n      this.setState({});\n    }\n\n    const state = this.state;\n    state.userUtility.user.accessToken = accessToken;\n\n    this.setState(state);\n    console.log('setUser user', this.state.userUtility.user);\n\n    // Set the user to local storage for future use.\n    await localStorage.setItem(\n      this.state.userUtility.storageKey,\n      JSON.stringify(this.state.userUtility.user)\n    );\n  };\n\n  /**\n   * Render App component.\n   *\n   * @public\n   */\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <MainMenu userUtility={this.state.userUtility} />\n          </header>\n          <section className=\"App-body\">\n            <Switch>\n              <PropsRoute\n                exact\n                path=\"/\"\n                component={ListPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n              <PropsRoute\n                exact\n                path=\"/login\"\n                component={LoginPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n              <PrivatePropsRoute\n                exact\n                path=\"/recipe/add\"\n                component={FormPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n              <PropsRoute\n                exact\n                path=\"/recipe/edit/:recipeId\"\n                component={FormPage}\n                messageUtility={this.state.messageUtility}\n                userUtility={this.state.userUtility}\n              />\n            </Switch>\n          </section>\n        </div>\n      </Router>\n    );\n  }\n}\n\n/**\n * Render component with merged props.\n *\n * @param {Object} component\n * @param  {...any} props\n */\nconst renderMergedProps = (component, ...props) => {\n  const finalProps = Object.assign({}, ...props);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Add props to a route.\n *\n * @param {Object} Object\n * @param {Object} component\n * @param {...any} props\n */\nconst PropsRoute = ({ component, ...props }) => {\n  return (\n    <Route\n      {...props}\n      render={routeProps => {\n        return renderMergedProps(component, routeProps, props);\n      }}\n    />\n  );\n};\n\n/**\n * Add props to a private route.\n *\n * @param {Object} Object\n * @param {Object} component\n * @param {...any} props\n */\nconst PrivatePropsRoute = ({ component, ...props }) => {\n  return (\n    <Route\n      {...props}\n      render={routeProps => {\n        if (authHandler.isUserAdmin) {\n          return renderMergedProps(component, routeProps, props);\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}